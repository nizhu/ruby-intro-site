<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Ruby | Ruby Intro]]></title>
  <link href="http://nizhu.github.io/ruby-intro-site/blog/categories/ruby/atom.xml" rel="self"/>
  <link href="http://nizhu.github.io/ruby-intro-site/"/>
  <updated>2013-07-31T20:05:50+10:00</updated>
  <id>http://nizhu.github.io/ruby-intro-site/</id>
  <author>
    <name><![CDATA[Nick Zhu]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Classes]]></title>
    <link href="http://nizhu.github.io/ruby-intro-site/blog/2013/07/31/classes/"/>
    <updated>2013-07-31T09:14:00+10:00</updated>
    <id>http://nizhu.github.io/ruby-intro-site/blog/2013/07/31/classes</id>
    <content type="html"><![CDATA[<p>Ruby is a Object Oriented language so it&rsquo;s no less than intuitive to have classes. The following code block shows the basic syntax of a Ruby class.</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>class Counter
</span><span class='line'>  @@classCount = 0
</span><span class='line'>  @instanceCount&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;p>  def initialize(startInstanceCount)&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;pre>&lt;code>@instanceCount = startInstanceCount
</span><span class='line'>&lt;/code>&lt;/pre>
</span><span class='line'>
</span><span class='line'>&lt;p>  end&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;p>  def icIncrement&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;pre>&lt;code>@instanceCount += 1
</span><span class='line'>&lt;/code>&lt;/pre>
</span><span class='line'>
</span><span class='line'>&lt;p>  end&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;p>  def self.ccIncrement&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;pre>&lt;code>@@classCount += 1
</span><span class='line'>&lt;/code>&lt;/pre>
</span><span class='line'>
</span><span class='line'>&lt;p>  end&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;p>  def to_s&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;pre>&lt;code>"classCount = #{@@classCount} and instanceCount = #{@instanceCount}"
</span><span class='line'>&lt;/code>&lt;/pre>
</span><span class='line'>
</span><span class='line'>&lt;p>  end
</span><span class='line'>end</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>We have a Class variable, <code>@@classCount</code>. This is equivalent to the keyword <code>static</code> in Java. There&rsquo;s an Instance variable <code>@instanceCount</code>.</p>

<p>Then there are the methods. <code>initialize</code> is the constructor used when you run <code>Counter.new</code>, <code>icIncrement</code> is an instance method, while <code>self.ccIncrement</code> is a class method &ndash; called with <code>Counter.ccIncrement</code>.</p>

<p>Finally <code>to_s</code> is the conversion of the class to a String, just like <code>toString()</code>.</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>a = Counter.new 0
</span><span class='line'>b = Counter.new 0&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;p>a.ccIncrement
</span><span class='line'>a.icIncrement&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;p>puts b&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;h1>classCount = 1 and instanceCount = 0&lt;/h1>
</span><span class='line'>
</span><span class='line'>&lt;p>b = Counter.new 5
</span><span class='line'>puts b&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;h1>classCount = 1 and instanceCount = 5&lt;/h1>
</span><span class='line'>
</span><span class='line'>&lt;p></span></code></pre></td></tr></table></div></figure></notextile></div></p>

<h2>Variable Scope</h2>

<p>Scope-wise, there are 5 different types of variables in Ruby and they are simply differentiated by the first character of their name.</p>

<ol>
<li>$: Global</li>
<li>@@: Class</li>
<li>@: Instance</li>
<li>[A-Z]: Constant</li>
<li>[a-z_]: Local</li>
</ol>


<p>Note that Constants can still be changed. The interpreter will simply issue a warning that that is the case, but the value assigning will proceed.</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>Aconstant = 1
</span><span class='line'>Aconstant = 2&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;h1>warning: already initialized constant Aconstant&lt;/h1>
</span><span class='line'>
</span><span class='line'>&lt;h1>warning: previous definition of Aconstant was here&lt;/h1>
</span><span class='line'>
</span><span class='line'>&lt;h1>2&lt;/h1>
</span><span class='line'>
</span><span class='line'>&lt;p></span></code></pre></td></tr></table></div></figure></notextile></div></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Functions]]></title>
    <link href="http://nizhu.github.io/ruby-intro-site/blog/2013/07/30/functions/"/>
    <updated>2013-07-30T12:55:00+10:00</updated>
    <id>http://nizhu.github.io/ruby-intro-site/blog/2013/07/30/functions</id>
    <content type="html"><![CDATA[<p>Firstly the syntax. Let&rsquo;s first define a very basic function we can use for this post.</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>def print_stuff(str1, str2, reverse = false)
</span><span class='line'>  if reverse&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;pre>&lt;code>puts "#{str2} and #{str1} received!"
</span><span class='line'>&lt;/code>&lt;/pre>
</span><span class='line'>
</span><span class='line'>&lt;p>  else&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;pre>&lt;code>puts "#{str1} and #{str2} received!"
</span><span class='line'>&lt;/code>&lt;/pre>
</span><span class='line'>
</span><span class='line'>&lt;p>  end
</span><span class='line'>  str = str1 + str2
</span><span class='line'>end</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<h3>Calling functions</h3>

<p>Brackets around function parameters is optional in Ruby. However, sometimes it&rsquo;s useful to include them regardless for clarity&rsquo;s sake.</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>print_stuff(&ldquo;First argument&rdquo;, &ldquo;Second argument&rdquo;)&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;h1>First argument and Second argument received!&lt;/h1>
</span><span class='line'>
</span><span class='line'>&lt;p>print_stuff &ldquo;First argument&rdquo;, &ldquo;Second argument&rdquo;&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;h1>First argument and Second argument received!&lt;/h1>
</span><span class='line'>
</span><span class='line'>&lt;p></span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>Arguments can be made optional by giving them a default value.</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>print_stuff(&ldquo;First argument&rdquo;, &ldquo;Second argument&rdquo;, false)&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;h1>First argument and Second argument received!&lt;/h1>
</span><span class='line'>
</span><span class='line'>&lt;p>print_stuff(&ldquo;First argument&rdquo;, &ldquo;Second argument&rdquo;, true)&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;h1>Second argument and First argument received!&lt;/h1>
</span><span class='line'>
</span><span class='line'>&lt;p></span></code></pre></td></tr></table></div></figure></notextile></div></p>

<h3>Return value</h3>

<p>As you may have already noticed, <code>print_stuff</code> does use <code>return</code> even though it does exist in Ruby and it does exactly what you&rsquo;d expect. If the return value is not specified, Ruby will return the value returned in the last executed line of the block</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>def add(a, b)
</span><span class='line'>  a + b
</span><span class='line'>end&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;p>puts add(1, 2)&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;h1>3&lt;/h1>
</span><span class='line'>
</span><span class='line'>&lt;p>def add_return(a, b)
</span><span class='line'>  return a + b
</span><span class='line'>end&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;p>puts add_return(1,2)&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;h1>3&lt;/h1>
</span><span class='line'>
</span><span class='line'>&lt;p>def add_print(a, b)
</span><span class='line'>  a + b
</span><span class='line'>  print &ldquo;add successful&rdquo;
</span><span class='line'>end&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;p>puts add_print(1,2)&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;h1>add successful&lt;/h1>
</span><span class='line'>
</span><span class='line'>&lt;p></span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>Because <code>print "add successful"</code> returns <code>nil</code>, <code>add_print</code> returns nil.</p>

<h1>Error Handling</h1>

<p><div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>def do_something
</span><span class='line'>  raise &ldquo;Failed to do something&rdquo;
</span><span class='line'>end&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;p>raise_exception&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;h1>RuntimeError: Failed to do something&lt;/h1>
</span><span class='line'>
</span><span class='line'>&lt;p>begin
</span><span class='line'>  do_something
</span><span class='line'>  puts &ldquo;Done something&rdquo;
</span><span class='line'>rescue
</span><span class='line'>  puts &ldquo;Rescuing from exception&rdquo;
</span><span class='line'>end&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;h1>Rescuing from exception&lt;/h1>
</span><span class='line'>
</span><span class='line'>&lt;p></span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p><code>retry</code> will return the cursor to start of the begin block it belongs to</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>i = 0
</span><span class='line'>begin
</span><span class='line'>  puts &ldquo;#{i}&rdquo;
</span><span class='line'>  i += 1
</span><span class='line'>  if i &lt; 2&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;pre>&lt;code>do_something
</span><span class='line'>&lt;/code>&lt;/pre>
</span><span class='line'>
</span><span class='line'>&lt;p>  end
</span><span class='line'>  puts &ldquo;All done!&rdquo;
</span><span class='line'>rescue
</span><span class='line'>  retry
</span><span class='line'>end&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;h1>0&lt;/h1>
</span><span class='line'>
</span><span class='line'>&lt;h1>1&lt;/h1>
</span><span class='line'>
</span><span class='line'>&lt;h1>All done!&lt;/h1>
</span><span class='line'>
</span><span class='line'>&lt;p></span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>Also relevant later on, <a href="http://innig.net/software/ruby/closures-in-ruby">Closures</a> and <a href="https://rubymonk.com/learning/books/2-metaprogramming-ruby/chapters/32-introduction-to-metaprogramming/lessons/75-being-meta">Metaprogramming</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Hash &amp; Symbols]]></title>
    <link href="http://nizhu.github.io/ruby-intro-site/blog/2013/07/29/hash-and-symbols/"/>
    <updated>2013-07-29T22:46:00+10:00</updated>
    <id>http://nizhu.github.io/ruby-intro-site/blog/2013/07/29/hash-and-symbols</id>
    <content type="html"><![CDATA[<p>Maps in the data structure sense is referred to in Ruby as Hashes. Map in Ruby is used in its functional programming definition.</p>

<h3>Construction</h3>

<p><div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>a = { &ldquo;a&rdquo; => &ldquo;b&rdquo;, 3 => &ldquo;d&rdquo; }&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;h1>{&ldquo;a&rdquo;=>&ldquo;b&rdquo;, 3=>&ldquo;d&rdquo;}&lt;/h1>
</span><span class='line'>
</span><span class='line'>&lt;p>b = Hash(&ldquo;a&rdquo; => &ldquo;b&rdquo;, 3 => &ldquo;d&rdquo;)&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;h1>{&ldquo;a&rdquo;=>&ldquo;b&rdquo;, 3=>&ldquo;d&rdquo;}&lt;/h1>
</span><span class='line'>
</span><span class='line'>&lt;p>c = {}
</span><span class='line'>d = Hash.new&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;p>e = Hash.new(0)</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<h3>Testing for Equality</h3>

<p><div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>a==b&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;h1>true&lt;/h1>
</span><span class='line'>
</span><span class='line'>&lt;p>a.equal? b&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;h1>false&lt;/h1>
</span><span class='line'>
</span><span class='line'>&lt;p>c==d&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;h1>true&lt;/h1>
</span><span class='line'>
</span><span class='line'>&lt;p>c.equal? d&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;h1>false&lt;/h1>
</span><span class='line'>
</span><span class='line'>&lt;p></span></code></pre></td></tr></table></div></figure></notextile></div></p>

<h3>Retrieving from Hash</h3>

<p><div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>a[&ldquo;a&rdquo;]&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;h1>&ldquo;b&rdquo;&lt;/h1>
</span><span class='line'>
</span><span class='line'>&lt;p>a[3]&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;h1>&ldquo;d&rdquo;&lt;/h1>
</span><span class='line'>
</span><span class='line'>&lt;p>a[4]&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;h1>nil&lt;/h1>
</span><span class='line'>
</span><span class='line'>&lt;p>e[4]&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;h1>0&lt;/h1>
</span><span class='line'>
</span><span class='line'>&lt;p></span></code></pre></td></tr></table></div></figure></notextile></div></p>

<h3>Adding values to the Hash</h3>

<p><div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>a[5] = 6
</span><span class='line'>puts a&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;h1>{&ldquo;a&rdquo;=>&ldquo;b&rdquo;, 3=>&ldquo;d&rdquo;, 5=>6}&lt;/h1>
</span><span class='line'>
</span><span class='line'>&lt;p></span></code></pre></td></tr></table></div></figure></notextile></div></p>

<h3>Other useful functions</h3>

<p><div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>b.clear
</span><span class='line'>puts b&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;h1>{}&lt;/h1>
</span><span class='line'>
</span><span class='line'>&lt;p>a.empty?&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;h1>false&lt;/h1>
</span><span class='line'>
</span><span class='line'>&lt;p>b.empty?&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;h1>true&lt;/h1>
</span><span class='line'>
</span><span class='line'>&lt;p>a.length&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;h1>3&lt;/h1>
</span><span class='line'>
</span><span class='line'>&lt;p>a.keys&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;h1>[&ldquo;a&rdquo;, 3, 5]&lt;/h1>
</span><span class='line'>
</span><span class='line'>&lt;p>a.values&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;h1>[&ldquo;b&rdquo;, &ldquo;d&rdquo;, 6]&lt;/h1>
</span><span class='line'>
</span><span class='line'>&lt;p></span></code></pre></td></tr></table></div></figure></notextile></div></p>

<h3>Iterating through the hash</h3>

<p><div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>a.each { |k,v| puts &ldquo;The value for #{k} is #{v}&rdquo; }&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;h1>The value for a is b&lt;/h1>
</span><span class='line'>
</span><span class='line'>&lt;h1>The value for 3 is d&lt;/h1>
</span><span class='line'>
</span><span class='line'>&lt;h1>The value for 5 is&lt;/h1>
</span><span class='line'>
</span><span class='line'>&lt;p>a.each_key { |k| puts &ldquo;The value for #{k} is #{a[k]}&rdquo; }&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;h1>The value for a is b&lt;/h1>
</span><span class='line'>
</span><span class='line'>&lt;h1>The value for 3 is d&lt;/h1>
</span><span class='line'>
</span><span class='line'>&lt;h1>The value for 5 is 6&lt;/h1>
</span><span class='line'>
</span><span class='line'>&lt;p>a.each_value { |v| puts v }&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;h1>b&lt;/h1>
</span><span class='line'>
</span><span class='line'>&lt;h1>d&lt;/h1>
</span><span class='line'>
</span><span class='line'>&lt;h1>6&lt;/h1>
</span><span class='line'>
</span><span class='line'>&lt;p>a.each do |k,v|
</span><span class='line'>  puts &ldquo;The value for #{k} is #{v}&rdquo;
</span><span class='line'>end&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;h1>The value for a is b&lt;/h1>
</span><span class='line'>
</span><span class='line'>&lt;h1>The value for 3 is d&lt;/h1>
</span><span class='line'>
</span><span class='line'>&lt;h1>The value for 5 is 6&lt;/h1>
</span><span class='line'>
</span><span class='line'>&lt;p></span></code></pre></td></tr></table></div></figure></notextile></div></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Loops]]></title>
    <link href="http://nizhu.github.io/ruby-intro-site/blog/2013/07/28/loops/"/>
    <updated>2013-07-28T21:09:00+10:00</updated>
    <id>http://nizhu.github.io/ruby-intro-site/blog/2013/07/28/loops</id>
    <content type="html"><![CDATA[<p>Like the if statements you saw 2 posts prior, there are many ways to construct loops. Not that there is no increment/decrement, <code>++/--</code>, operation in Ruby.</p>

<p>There is the while loop you&rsquo;re used to</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>i = 0
</span><span class='line'>while i &lt; 3 do
</span><span class='line'>  puts i
</span><span class='line'>  i += 1
</span><span class='line'>end&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;h1>0&lt;/h1>
</span><span class='line'>
</span><span class='line'>&lt;h1>1&lt;/h1>
</span><span class='line'>
</span><span class='line'>&lt;h1>2&lt;/h1>
</span><span class='line'>
</span><span class='line'>&lt;p></span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>While loops with the test at the end</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>i = 0
</span><span class='line'>begin
</span><span class='line'>  puts i
</span><span class='line'>  i += 1
</span><span class='line'>end while i &lt; 3&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;h1>0&lt;/h1>
</span><span class='line'>
</span><span class='line'>&lt;h1>1&lt;/h1>
</span><span class='line'>
</span><span class='line'>&lt;h1>2&lt;/h1>
</span><span class='line'>
</span><span class='line'>&lt;p>i = 0
</span><span class='line'>begin
</span><span class='line'>  puts i
</span><span class='line'>  i += 1
</span><span class='line'>end while i &lt; 0&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;h1>0&lt;/h1>
</span><span class='line'>
</span><span class='line'>&lt;p></span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>There&rsquo;s the until loops which run while the condition is false</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>i = 0
</span><span class='line'>until i > 2
</span><span class='line'>  puts i
</span><span class='line'>  i += 1
</span><span class='line'>end&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;h1>0&lt;/h1>
</span><span class='line'>
</span><span class='line'>&lt;h1>1&lt;/h1>
</span><span class='line'>
</span><span class='line'>&lt;h1>2&lt;/h1>
</span><span class='line'>
</span><span class='line'>&lt;p>i = 0
</span><span class='line'>begin
</span><span class='line'>  puts i
</span><span class='line'>  i += 1
</span><span class='line'>end until i >= 0</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>And finally, my favourite &ndash; the for loops. If you already have a list to iterate through, great.</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>a = [0, 1, 2]
</span><span class='line'>for i in a
</span><span class='line'>  puts i
</span><span class='line'>end&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;h1>0&lt;/h1>
</span><span class='line'>
</span><span class='line'>&lt;h1>1&lt;/h1>
</span><span class='line'>
</span><span class='line'>&lt;h1>2&lt;/h1>
</span><span class='line'>
</span><span class='line'>&lt;p></span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>If not, it&rsquo;s great too</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>for i in 0..2
</span><span class='line'>  puts i
</span><span class='line'>end&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;h1>0&lt;/h1>
</span><span class='line'>
</span><span class='line'>&lt;h1>1&lt;/h1>
</span><span class='line'>
</span><span class='line'>&lt;h1>2&lt;/h1>
</span><span class='line'>
</span><span class='line'>&lt;p>(0..2).each do |i|
</span><span class='line'>  puts i
</span><span class='line'>end&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;h1>0&lt;/h1>
</span><span class='line'>
</span><span class='line'>&lt;h1>1&lt;/h1>
</span><span class='line'>
</span><span class='line'>&lt;h1>2&lt;/h1>
</span><span class='line'>
</span><span class='line'>&lt;p></span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>There&rsquo;s also 4 keywords to help you manage the control of flow <code>break</code>, <code>next</code>, <code>redo</code> and finally <code>retry</code> which I&rsquo;ll bring up in the Error Handling section. <code>break</code> exits the inner most loop</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>for i in 0..2
</span><span class='line'>  puts i
</span><span class='line'>  if i == 1&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;pre>&lt;code>break
</span><span class='line'>&lt;/code>&lt;/pre>
</span><span class='line'>
</span><span class='line'>&lt;p>  end
</span><span class='line'>end&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;h1>0&lt;/h1>
</span><span class='line'>
</span><span class='line'>&lt;h1>1&lt;/h1>
</span><span class='line'>
</span><span class='line'>&lt;p></span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>While <code>next</code> jumps to the next iteration of the loop</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>for i in 0..2
</span><span class='line'>  if i == 1&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;pre>&lt;code>next
</span><span class='line'>&lt;/code>&lt;/pre>
</span><span class='line'>
</span><span class='line'>&lt;p>  end
</span><span class='line'>  puts i
</span><span class='line'>end&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;h1>0&lt;/h1>
</span><span class='line'>
</span><span class='line'>&lt;h1>2&lt;/h1>
</span><span class='line'>
</span><span class='line'>&lt;p>for i in 0..2
</span><span class='line'>  if i == 2&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;pre>&lt;code>next
</span><span class='line'>&lt;/code>&lt;/pre>
</span><span class='line'>
</span><span class='line'>&lt;p>  end
</span><span class='line'>  puts i
</span><span class='line'>end&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;h1>0&lt;/h1>
</span><span class='line'>
</span><span class='line'>&lt;h1>1&lt;/h1>
</span><span class='line'>
</span><span class='line'>&lt;p></span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>And <code>redo</code> jumps back to the beginning of the current iteration in this loop</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>j = 0
</span><span class='line'>for i in 0..2
</span><span class='line'>  puts &ldquo;i is #{i}&rdquo;
</span><span class='line'>  puts &ldquo;j is #{j}&rdquo;
</span><span class='line'>  j += 1
</span><span class='line'>  if j > 2&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;pre>&lt;code>break
</span><span class='line'>&lt;/code>&lt;/pre>
</span><span class='line'>
</span><span class='line'>&lt;p>  end
</span><span class='line'>  if i == 1&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;pre>&lt;code>redo
</span><span class='line'>&lt;/code>&lt;/pre>
</span><span class='line'>
</span><span class='line'>&lt;p>  end
</span><span class='line'>end&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;h1>i is 0&lt;/h1>
</span><span class='line'>
</span><span class='line'>&lt;h1>j is 0&lt;/h1>
</span><span class='line'>
</span><span class='line'>&lt;h1>i is 1&lt;/h1>
</span><span class='line'>
</span><span class='line'>&lt;h1>j is 1&lt;/h1>
</span><span class='line'>
</span><span class='line'>&lt;h1>i is 1&lt;/h1>
</span><span class='line'>
</span><span class='line'>&lt;h1>j is 2&lt;/h1>
</span><span class='line'>
</span><span class='line'>&lt;p></span></code></pre></td></tr></table></div></figure></notextile></div></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Arrays]]></title>
    <link href="http://nizhu.github.io/ruby-intro-site/blog/2013/07/28/arrays/"/>
    <updated>2013-07-28T20:21:00+10:00</updated>
    <id>http://nizhu.github.io/ruby-intro-site/blog/2013/07/28/arrays</id>
    <content type="html"><![CDATA[<p>Arrays in Ruby are very similar to those in other dynamic programming languages. It&rsquo;s all very standard and the documentation has loads of examples anyway, so I&rsquo;ll go through only the most basic and obvious to get started.</p>

<h3>Construction</h3>

<p><div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>[1, &ldquo;foo&rdquo;, nil, &ldquo;bar&rdquo;]&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;h1>[1, &ldquo;foo&rdquo;, nil, &ldquo;bar&rdquo;]&lt;/h1>
</span><span class='line'>
</span><span class='line'>&lt;p>Array.new&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;h1>[]&lt;/h1>
</span><span class='line'>
</span><span class='line'>&lt;p>Array.new(3, true)&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;h1>[true, true, true]&lt;/h1>
</span><span class='line'>
</span><span class='line'>&lt;p>(1..10).to_a&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;h1>[1, 2, 3, 4, 5, 6, 7, 8, 9, 10]&lt;/h1>
</span><span class='line'>
</span><span class='line'>&lt;p>(&ldquo;a7&rdquo;..&ldquo;b5&rdquo;).to_a&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;h1>[&ldquo;a7&rdquo;, &ldquo;a8&rdquo;, &ldquo;a9&rdquo;, &ldquo;b0&rdquo;, &ldquo;b1&rdquo;, &ldquo;b2&rdquo;, &ldquo;b3&rdquo;, &ldquo;b4&rdquo;, &ldquo;b5&rdquo;]&lt;/h1>
</span><span class='line'>
</span><span class='line'>&lt;p></span></code></pre></td></tr></table></div></figure></notextile></div></p>

<h3>Accessing elements and array info</h3>

<p><div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>arr = [1, 2, 3, 4, 5, 6]
</span><span class='line'>arr&lt;a href="http://stackoverflow.com/questions/5018633/what-is-the-difference-between-print-and-puts">2&lt;/a>&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;h1>3&lt;/h1>
</span><span class='line'>
</span><span class='line'>&lt;p>arr[100]&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;h1>nil&lt;/h1>
</span><span class='line'>
</span><span class='line'>&lt;p>arr[-3]&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;h1>4&lt;/h1>
</span><span class='line'>
</span><span class='line'>&lt;p>arr[2, 3]&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;h1>[3, 4, 5]&lt;/h1>
</span><span class='line'>
</span><span class='line'>&lt;p>arr[1..4]&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;h1>[2, 3, 4, 5]&lt;/h1>
</span><span class='line'>
</span><span class='line'>&lt;p>arr.at(0)&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;h1>1&lt;/h1>
</span><span class='line'>
</span><span class='line'>&lt;p>arr.length&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;h1>6&lt;/h1>
</span><span class='line'>
</span><span class='line'>&lt;p>arr.empty?&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;h1>false&lt;/h1>
</span><span class='line'>
</span><span class='line'>&lt;p>arr.include?(7)&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;h1>false&lt;/h1>
</span><span class='line'>
</span><span class='line'>&lt;p></span></code></pre></td></tr></table></div></figure></notextile></div></p>

<h3>Adding to the array</h3>

<p><div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>arr.push(7)&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;h1>[1, 2, 3, 4, 5, 6, 7]&lt;/h1>
</span><span class='line'>
</span><span class='line'>&lt;p>arr &lt;&lt; 8&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;h1>[1, 2, 3, 4, 5, 6, 7, 8]&lt;/h1>
</span><span class='line'>
</span><span class='line'>&lt;p>arr.unshift(0)&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;h1>[0, 1, 2, 3, 4, 5, 6, 7]&lt;/h1>
</span><span class='line'>
</span><span class='line'>&lt;p>arr.insert(3, 2.5)&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;h1>[0, 1, 2, 2.5, 3, 4, 5, 6, 7]&lt;/h1>
</span><span class='line'>
</span><span class='line'>&lt;p></span></code></pre></td></tr></table></div></figure></notextile></div></p>

<h3>Removing from Array</h3>

<p><div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>arr&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;h1>[0, 1, 2, 2.5, 3, 4, 5, 6, 7]&lt;/h1>
</span><span class='line'>
</span><span class='line'>&lt;p>arr.pop&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;h1>7&lt;/h1>
</span><span class='line'>
</span><span class='line'>&lt;h1>arr = [0, 1, 2, 2.5, 3, 4, 5, 6]&lt;/h1>
</span><span class='line'>
</span><span class='line'>&lt;p>arr.shift&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;h1>0&lt;/h1>
</span><span class='line'>
</span><span class='line'>&lt;h1>arr = [1, 2, 2.5, 3, 4, 5, 6]&lt;/h1>
</span><span class='line'>
</span><span class='line'>&lt;p>arr.delete(3)&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;h1>2.5&lt;/h1>
</span><span class='line'>
</span><span class='line'>&lt;h1>arr = [1, 2. 3, 4, 5, 6]&lt;/h1>
</span><span class='line'>
</span><span class='line'>&lt;p></span></code></pre></td></tr></table></div></figure></notextile></div></p>

<h2>Print vs Puts</h2>

<p>Both these functions can be used to output text. To put it simply, puts adds a newline character to the end of each argument and outputs nil as an invisible character rather than a String. Refer to the link at the bottom for more discussion.</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>print [nil, 1, 2]&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;h1>[nil, 1, 2]=> nil&lt;/h1>
</span><span class='line'>
</span><span class='line'>&lt;p>puts [nil, 1, 2]&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;h1>&lt;/h1>
</span><span class='line'>
</span><span class='line'>&lt;h1>1&lt;/h1>
</span><span class='line'>
</span><span class='line'>&lt;h1>2&lt;/h1>
</span><span class='line'>
</span><span class='line'>&lt;p></span></code></pre></td></tr></table></div></figure></notextile></div></p>

<ol>
<li><a href="http://ruby-doc.org/core-2.0/Array.html">Ruby-Docs Array</a></li>
<li><a href="http://stackoverflow.com/questions/5018633/what-is-the-difference-between-print-and-puts">Stack Overflow &ndash; What is the difference between print and puts</a></li>
</ol>

]]></content>
  </entry>
  
</feed>
