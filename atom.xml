<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Ruby Intro]]></title>
  <link href="http://nizhu.github.io/ruby-intro-site/atom.xml" rel="self"/>
  <link href="http://nizhu.github.io/ruby-intro-site/"/>
  <updated>2013-08-10T19:34:00+10:00</updated>
  <id>http://nizhu.github.io/ruby-intro-site/</id>
  <author>
    <name><![CDATA[Nick Zhu]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Deploying with Heroku]]></title>
    <link href="http://nizhu.github.io/ruby-intro-site/blog/2013/08/05/deploying-with-heroku/"/>
    <updated>2013-08-05T22:55:00+10:00</updated>
    <id>http://nizhu.github.io/ruby-intro-site/blog/2013/08/05/deploying-with-heroku</id>
    <content type="html"><![CDATA[<p>Heroku is a pioneer in what we now call Platform-As-A-Service. It&rsquo;s a little on the expensive side to scale on it, but its great for developing with as there is a freebie tier and its service makes deploying to the internet a breeze. Be aware however that if you need a database, PostgreSQL is your only option.</p>

<p>The newcomer in town is <a href="https://www.appfog.com/pricing/">Appfog</a>. They&rsquo;re a lot cheaper than Heroku and supports MySQL in addition to PostgreSQL, but I haven&rsquo;t had the chance to check them out yet.</p>

<h2>Step 1</h2>

<p><a href="https://id.heroku.com/signup">Sign up to Heroku</a></p>

<h2>Step 2</h2>

<p><a href="https://toolbelt.heroku.com">Install the Heroku Toolbelt</a></p>

<h2>Step 3</h2>

<p>In the root folder of your application, type in the following commands</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="c"># Initialize a git repository</span>
</span><span class='line'>git init
</span><span class='line'>
</span><span class='line'><span class="c"># Login to heroku (enter your username and password as prompted, generate ssh key if required)</span>
</span><span class='line'>heroku login
</span><span class='line'>
</span><span class='line'><span class="c"># Create a new app on heroku</span>
</span><span class='line'><span class="c"># Make note of the output of this command</span>
</span><span class='line'><span class="c"># The http url is where your application will be available - http://&lt;app name&gt;.heroku.com</span>
</span><span class='line'><span class="c"># The git url is where you will be deploying the application to - git://heroku.com:&lt;app name&gt;.git</span>
</span><span class='line'><span class="c"># The last line should say &#39;Git remote heroku added&#39;</span>
</span><span class='line'><span class="c"># If it doesn&#39;t, do &#39;heroku git:remote -a &lt;app name&gt;&#39;</span>
</span><span class='line'>heroku create
</span><span class='line'>
</span><span class='line'><span class="c"># Add everything to git staging</span>
</span><span class='line'>git add .
</span><span class='line'>
</span><span class='line'><span class="c"># Commit the repository</span>
</span><span class='line'>git commit -m <span class="s2">&quot;initial commit&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="c"># Push to Heroku for the first time</span>
</span><span class='line'>git push heroku master
</span><span class='line'>
</span><span class='line'><span class="c"># Ensure that only 1 web dyno will be running</span>
</span><span class='line'>heroku ps:scale <span class="nv">web</span><span class="o">=</span>1
</span></code></pre></td></tr></table></div></figure>


<h2>Step 4</h2>

<p>Your app should now be available in the http url mentioned in step 3. If there are any problems, you can watch your application&rsquo;s live logging by using <code>heroku logs -t</code>. As usual, google your issues :) There are some relevant links to documentation below too.</p>

<ol>
<li><a href="https://id.heroku.com/signup">Heroku Signup</a></li>
<li><a href="https://toolbelt.heroku.com">Heroku Toolbelt</a></li>
<li><a href="https://devcenter.heroku.com/articles/quickstart">Heroku Quickstart</a></li>
<li><a href="https://devcenter.heroku.com/articles/rails4">Heroku Rails4</a></li>
<li><a href="https://devcenter.heroku.com/articles/rails3">Heroku Rails3</a></li>
<li><a href="https://devcenter.heroku.com/articles/usage-and-billing#750-free-dyno-hours-per-app">Heroku Billing</a></li>
<li><a href="https://www.appfog.com/pricing/">Appfog Pricing</a></li>
<li><a href="http://seng2021-rails-demo.herokuapp.com/">Demo on Heroku</a></li>
</ol>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Prettifying with Bootstrap]]></title>
    <link href="http://nizhu.github.io/ruby-intro-site/blog/2013/08/05/prettifying-with-bootstrap/"/>
    <updated>2013-08-05T22:27:00+10:00</updated>
    <id>http://nizhu.github.io/ruby-intro-site/blog/2013/08/05/prettifying-with-bootstrap</id>
    <content type="html"><![CDATA[<p>Since Twitter open sourced their CSS framework several years ago, Bootstrap has become the benchmark for CSS. As a terrible designer, I&rsquo;ve very much relied on Bootstrap to make my web pages decent looking, not great &ndash; just OK.</p>

<p>I&rsquo;ve opted for a slightly older version (2.3.2) here since the new version 3 is not yet stable at the time of writing. The documentation for 2.3.2 can be found <a href="http://getbootstrap.com/2.3.2/">here</a>. Regardless, there&rsquo;s only 3 files to change.</p>

<figure class='code'><figcaption><span>app/views/layouts/application.html.erb </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'><span class="cp">&lt;!DOCTYPE html&gt;</span>
</span><span class='line'><span class="nt">&lt;html&gt;</span>
</span><span class='line'><span class="nt">&lt;head&gt;</span>
</span><span class='line'>  <span class="nt">&lt;title&gt;</span>TwitterApp<span class="nt">&lt;/title&gt;</span>
</span><span class='line'>  <span class="nt">&lt;link</span> <span class="na">href=</span><span class="s">&quot;//netdna.bootstrapcdn.com/twitter-bootstrap/2.3.2/css/bootstrap-combined.min.css&quot;</span> <span class="na">rel=</span><span class="s">&quot;stylesheet&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>  <span class="err">&lt;</span>%= stylesheet_link_tag    &quot;application&quot;, media: &quot;all&quot;, &quot;data-turbolinks-track&quot; =&gt; true %&gt;
</span><span class='line'>  <span class="err">&lt;</span>%= javascript_include_tag &quot;application&quot;, &quot;data-turbolinks-track&quot; =&gt; true %&gt;
</span><span class='line'>  <span class="err">&lt;</span>%= csrf_meta_tags %&gt;
</span><span class='line'><span class="nt">&lt;/head&gt;</span>
</span><span class='line'><span class="nt">&lt;body&gt;</span>
</span><span class='line'>  <span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">&quot;container&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>    <span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">&quot;navbar&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>      <span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">&quot;navbar-inner&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>        <span class="nt">&lt;a</span> <span class="na">class=</span><span class="s">&quot;brand&quot;</span> <span class="na">href=</span><span class="s">&quot;/&quot;</span><span class="nt">&gt;</span>Twitter App<span class="nt">&lt;/a&gt;</span>
</span><span class='line'>        <span class="nt">&lt;ul</span> <span class="na">class=</span><span class="s">&quot;nav&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>          <span class="nt">&lt;li&gt;&lt;a</span> <span class="na">href=</span><span class="s">&quot;/proposals&quot;</span><span class="nt">&gt;</span>JB Proposals<span class="nt">&lt;/a&gt;&lt;/li&gt;</span>
</span><span class='line'>          <span class="nt">&lt;li&gt;&lt;a</span> <span class="na">href=</span><span class="s">&quot;/ausvotes&quot;</span><span class="nt">&gt;</span>#ausvotes<span class="nt">&lt;/a&gt;&lt;/li&gt;</span>
</span><span class='line'>        <span class="nt">&lt;/ul&gt;</span>
</span><span class='line'>      <span class="nt">&lt;/div&gt;</span>
</span><span class='line'>    <span class="nt">&lt;/div&gt;</span>
</span><span class='line'><span class="err">&lt;</span>%= yield %&gt;
</span><span class='line'>  <span class="nt">&lt;/div&gt;</span>
</span><span class='line'><span class="nt">&lt;/body&gt;</span>
</span><span class='line'><span class="nt">&lt;/html&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>And add <code>class="table"</code> to the 2 table tags</p>

<figure class='code'><figcaption><span>app/views/twitter/ausvotes.html.erb </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'><span class="nt">&lt;h1&gt;</span>Last 200 Tweets with #ausvotes<span class="nt">&lt;/h1&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="nt">&lt;table</span> <span class="na">class=</span><span class="s">&quot;table&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>  <span class="nt">&lt;tr&gt;</span>
</span><span class='line'>    <span class="nt">&lt;th&gt;</span>User<span class="nt">&lt;/th&gt;</span>
</span><span class='line'>    <span class="nt">&lt;th&gt;</span>Text<span class="nt">&lt;/th&gt;</span>
</span><span class='line'>  <span class="nt">&lt;/tr&gt;</span>
</span><span class='line'><span class="err">&lt;</span>% @tweets.each do |tweet| %&gt;
</span><span class='line'>  <span class="nt">&lt;tr&gt;</span>
</span><span class='line'>    <span class="nt">&lt;td&gt;</span><span class="err">&lt;</span>%= tweet.user.name %&gt;<span class="nt">&lt;/td&gt;</span>
</span><span class='line'>    <span class="nt">&lt;td&gt;</span><span class="err">&lt;</span>%= tweet.text %&gt;<span class="nt">&lt;/td&gt;</span>
</span><span class='line'>  <span class="nt">&lt;/tr&gt;</span>
</span><span class='line'><span class="err">&lt;</span>% end %&gt;
</span><span class='line'><span class="nt">&lt;/table&gt;</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span>app/views/twitter/proposals.html.erb </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'><span class="nt">&lt;h1&gt;</span>Last 200 Justin Bieber Proposals<span class="nt">&lt;/h1&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="nt">&lt;table</span> <span class="na">class=</span><span class="s">&quot;table&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>  <span class="nt">&lt;tr&gt;</span>
</span><span class='line'>    <span class="nt">&lt;th&gt;</span>User<span class="nt">&lt;/th&gt;</span>
</span><span class='line'>    <span class="nt">&lt;th&gt;</span>Text<span class="nt">&lt;/th&gt;</span>
</span><span class='line'>  <span class="nt">&lt;/tr&gt;</span>
</span><span class='line'><span class="err">&lt;</span>% @tweets.each do |tweet| %&gt;
</span><span class='line'>  <span class="nt">&lt;tr&gt;</span>
</span><span class='line'>    <span class="nt">&lt;td&gt;</span><span class="err">&lt;</span>%= tweet.user.name %&gt;<span class="nt">&lt;/td&gt;</span>
</span><span class='line'>    <span class="nt">&lt;td&gt;</span><span class="err">&lt;</span>%= tweet.text %&gt;<span class="nt">&lt;/td&gt;</span>
</span><span class='line'>  <span class="nt">&lt;/tr&gt;</span>
</span><span class='line'><span class="err">&lt;</span>% end %&gt;
</span><span class='line'><span class="nt">&lt;/table&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<ol>
<li><a href="http://getbootstrap.com/2.3.2/">Twitter Bootstrap</a></li>
</ol>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Ruby on Rails]]></title>
    <link href="http://nizhu.github.io/ruby-intro-site/blog/2013/08/04/ruby-on-rails/"/>
    <updated>2013-08-04T19:58:00+10:00</updated>
    <id>http://nizhu.github.io/ruby-intro-site/blog/2013/08/04/ruby-on-rails</id>
    <content type="html"><![CDATA[<p>As I mentioned in the very first post, Rails has been credited with Ruby&rsquo;s sudden, meteoric rise in popularity. It&rsquo;s not the only web application framework for Ruby, but it remains by far the most popular to this day. If you&rsquo;re interested in a career in web development and want to stay away from corporate enterprises, this is a great way to go about it.</p>

<p>Rails emphasises the Model-View-Controller principle, and if you&rsquo;re not familiar with the concept, it&rsquo;s essentially the separation of the data, to the logic of processing the data, and the display of the processed results (links at the bottom for more details). The application I&rsquo;ll be demoing will ignore the Model part however. This is a very simple application will retrieve some data from Twitter, same as the previous post, and display it on a webpage.</p>

<p>As always, start by installing it&hellip;<code>gem install rails</code></p>

<h2>Scaffolding</h2>

<p>One of the big features of rails is scaffolding &ndash; automatically generating common parts of an application. This is the first step of development. Here, we&rsquo;re asking rails to scaffold the project without support for a database.</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nb">cd</span> ~
</span><span class='line'>rails new twitter_app -O
</span><span class='line'><span class="nb">cd </span>twitter_app
</span></code></pre></td></tr></table></div></figure>


<p>The rails generator has created a lot of new files &ndash; about 20 in fact &ndash; but there aren&rsquo;t that many we need to worry about.</p>

<p>Before you begin editing the files, copy the twitter configuration file from the previous pages to the <code>config/initializers</code> directory. Files in this directory are run when the server is started.</p>

<h2>Gemfile</h2>

<p>This file basically tells the Ruby environment what gems are required to run the the application. Our app only needs the twitter gem so just add that.</p>

<figure class='code'><figcaption><span>Gemfile </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">source</span> <span class="s1">&#39;https://rubygems.org&#39;</span>
</span><span class='line'><span class="n">gem</span> <span class="s1">&#39;twitter&#39;</span>
</span><span class='line'><span class="n">gem</span> <span class="s1">&#39;rails&#39;</span><span class="p">,</span> <span class="s1">&#39;4.0.0&#39;</span>
</span></code></pre></td></tr></table></div></figure>


<p>Source specifies where it should look for the gems if they were to be installed. We can also specify the version of a gem we want in order to ensure that things work as we expect; don&rsquo;t want updates to break the application. Everything else in the file is optional.</p>

<h2>The Twitter controller</h2>

<p>First thing to do is to generate the controller.. <code>rails generate controller twitter</code>.</p>

<p>The code here is almost identical to that from the previous Twitter post. Now, we&rsquo;re just keeping all the tweets in an array instead of just printing it. At the end of the processing, Rails will automatically look for the template <code>views/&lt;controller name&gt;/&lt;function name&gt;.*</code> unless you specify which HTML template to use with the <code>render</code>. This is displayed within <code>views/layouts/application.html.erb</code>.</p>

<figure class='code'><figcaption><span>app/controllers/twitter_controller.rb </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="nb">require</span> <span class="s1">&#39;twitter&#39;</span>
</span><span class='line'><span class="k">class</span> <span class="nc">TwitterController</span> <span class="o">&lt;</span> <span class="no">ApplicationController</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">proposals</span>
</span><span class='line'>    <span class="n">tweets</span> <span class="o">=</span> <span class="o">[]</span>
</span><span class='line'>    <span class="n">max_id</span> <span class="o">=</span> <span class="o">-</span><span class="mi">1</span>
</span><span class='line'>    <span class="k">for</span> <span class="n">i</span> <span class="k">in</span> <span class="p">(</span><span class="mi">0</span><span class="o">.</span><span class="n">.</span><span class="mi">1</span><span class="p">)</span>
</span><span class='line'>      <span class="n">t</span> <span class="o">=</span> <span class="no">Twitter</span><span class="o">.</span><span class="n">search</span><span class="p">(</span><span class="s2">&quot;to:justinbieber marry me&quot;</span><span class="p">,</span> <span class="ss">:count</span> <span class="o">=&gt;</span> <span class="mi">100</span><span class="p">,</span> <span class="ss">:result_type</span> <span class="o">=&gt;</span> <span class="s2">&quot;recent&quot;</span><span class="p">)</span>
</span><span class='line'>      <span class="n">t</span><span class="o">.</span><span class="n">statuses</span><span class="o">.</span><span class="n">each</span> <span class="k">do</span> <span class="o">|</span> <span class="n">tweet</span> <span class="o">|</span>
</span><span class='line'>        <span class="n">tweets</span><span class="o">.</span><span class="n">push</span> <span class="n">tweet</span>
</span><span class='line'>      <span class="k">end</span>
</span><span class='line'>      <span class="n">max_id</span> <span class="o">=</span> <span class="n">t</span><span class="o">.</span><span class="n">next_results</span><span class="o">[</span><span class="ss">:max_id</span><span class="o">]</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">ausvotes</span>
</span><span class='line'>    <span class="n">tweets</span> <span class="o">=</span> <span class="o">[]</span>
</span><span class='line'>    <span class="n">max_id</span> <span class="o">=</span> <span class="o">-</span><span class="mi">1</span>
</span><span class='line'>    <span class="k">for</span> <span class="n">i</span> <span class="k">in</span> <span class="p">(</span><span class="mi">0</span><span class="o">.</span><span class="n">.</span><span class="mi">1</span><span class="p">)</span>
</span><span class='line'>      <span class="n">t</span> <span class="o">=</span> <span class="no">Twitter</span><span class="o">.</span><span class="n">search</span><span class="p">(</span><span class="s2">&quot;#ausvotes -rt&quot;</span><span class="p">,</span> <span class="ss">:count</span> <span class="o">=&gt;</span> <span class="mi">100</span><span class="p">,</span> <span class="ss">:result_type</span> <span class="o">=&gt;</span> <span class="s2">&quot;recent&quot;</span><span class="p">,</span> <span class="ss">:max_id</span> <span class="o">=&gt;</span> <span class="n">max_id</span><span class="p">)</span>
</span><span class='line'>      <span class="n">t</span><span class="o">.</span><span class="n">statuses</span><span class="o">.</span><span class="n">each</span> <span class="k">do</span> <span class="o">|</span> <span class="n">tweet</span> <span class="o">|</span>
</span><span class='line'>        <span class="n">tweets</span><span class="o">.</span><span class="n">push</span> <span class="n">tweet</span>
</span><span class='line'>      <span class="k">end</span>
</span><span class='line'>      <span class="n">max_id</span> <span class="o">=</span> <span class="n">t</span><span class="o">.</span><span class="n">next_results</span><span class="o">[</span><span class="ss">:max_id</span><span class="o">]</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<h2>The Rails Router</h2>

<p>It&rsquo;s advisable that you leave the commented out lines here until you get the hang of routing, just for reference.</p>

<figure class='code'><figcaption><span>config/routes.rb </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="ss">TwitterApp</span><span class="p">:</span><span class="ss">:Application</span><span class="o">.</span><span class="n">routes</span><span class="o">.</span><span class="n">draw</span> <span class="k">do</span>
</span><span class='line'>  <span class="n">root</span> <span class="s1">&#39;twitter#proposals&#39;</span>
</span><span class='line'>  <span class="n">get</span> <span class="s1">&#39;proposals&#39;</span> <span class="o">=&gt;</span> <span class="s1">&#39;twitter#proposals&#39;</span>
</span><span class='line'>  <span class="n">get</span> <span class="s1">&#39;ausvotes&#39;</span> <span class="o">=&gt;</span> <span class="s1">&#39;twitter#ausvotes&#39;</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>The first line in the block points the root path, <code>/</code> to the proposals function in the twitter controller. The second and third points <code>/proposals`` and</code>/ausvotes&#8220;` paths to their respective functions in the same controller.</p>

<h2>Justin Bieber Proposals page</h2>

<p>If you&rsquo;re familiar with JSP or PHP, this is very much the same &ndash; HTML mixed in with some code. Here, we&rsquo;re making a simple table but we&rsquo;re creating a row for each tweet.</p>

<figure class='code'><figcaption><span>app/views/twitter/proposals.html.erb </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'><span class="nt">&lt;h1&gt;</span>Last 200 Justin Bieber Proposals<span class="nt">&lt;/h1&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="nt">&lt;table&gt;</span>
</span><span class='line'>  <span class="nt">&lt;tr&gt;</span>
</span><span class='line'>    <span class="nt">&lt;th&gt;</span>User<span class="nt">&lt;/th&gt;</span>
</span><span class='line'>    <span class="nt">&lt;th&gt;</span>Text<span class="nt">&lt;/th&gt;</span>
</span><span class='line'>  <span class="nt">&lt;/tr&gt;</span>
</span><span class='line'><span class="err">&lt;</span>% @tweets.each do |tweet| %&gt;
</span><span class='line'>  <span class="nt">&lt;tr&gt;</span>
</span><span class='line'>    <span class="nt">&lt;td&gt;</span><span class="err">&lt;</span>%= tweet.user.name %&gt;<span class="nt">&lt;/td&gt;</span>
</span><span class='line'>    <span class="nt">&lt;td&gt;</span><span class="err">&lt;</span>%= tweet.text %&gt;<span class="nt">&lt;/td&gt;</span>
</span><span class='line'>  <span class="nt">&lt;/tr&gt;</span>
</span><span class='line'><span class="err">&lt;</span>% end %&gt;
</span><span class='line'><span class="nt">&lt;/table&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<h2>#ausvotes page</h2>

<p>Identical to the above. Do try to refactor this :)</p>

<figure class='code'><figcaption><span>app/views/twitter/ausvotes.html.erb </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'><span class="nt">&lt;h1&gt;</span>Last 200 Tweets with #ausvotes<span class="nt">&lt;/h1&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="nt">&lt;table&gt;</span>
</span><span class='line'>  <span class="nt">&lt;tr&gt;</span>
</span><span class='line'>    <span class="nt">&lt;th&gt;</span>User<span class="nt">&lt;/th&gt;</span>
</span><span class='line'>    <span class="nt">&lt;th&gt;</span>Text<span class="nt">&lt;/th&gt;</span>
</span><span class='line'>  <span class="nt">&lt;/tr&gt;</span>
</span><span class='line'><span class="err">&lt;</span>% @tweets.each do |tweet| %&gt;
</span><span class='line'>  <span class="nt">&lt;tr&gt;</span>
</span><span class='line'>    <span class="nt">&lt;td&gt;</span><span class="err">&lt;</span>%= tweet.user.name %&gt;<span class="nt">&lt;/td&gt;</span>
</span><span class='line'>    <span class="nt">&lt;td&gt;</span><span class="err">&lt;</span>%= tweet.text %&gt;<span class="nt">&lt;/td&gt;</span>
</span><span class='line'>  <span class="nt">&lt;/tr&gt;</span>
</span><span class='line'><span class="err">&lt;</span>% end %&gt;
</span><span class='line'><span class="nt">&lt;/table&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Deploying with WEBrick</h2>

<p>WEBrick is a very simple Rails web server, perfect for dev testing. Just go to the root directory of the application and type in <code>rails server</code>. WEBrick listens to port 3000 by default, but look carefully at its output if you come across any problems. The JB Proposals page will be available in @ <code>http://0.0.0.0:3000</code> and <code>http://0.0.0.0:3000/proposals</code> while the #ausvotes page will be available at <code>http://0.0.0.0:3000/ausvotes</code>.</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>rails <span class="nv">server</span>
</span><span class='line'><span class="o">=</span>&gt; Booting <span class="nv">WEBrick</span>
</span><span class='line'><span class="o">=</span>&gt; Rails 4.0.0 application starting in development on http://0.0.0.0:3000
</span><span class='line'><span class="o">=</span>&gt; Run <span class="sb">`</span>rails server -h<span class="sb">`</span> <span class="k">for </span>more startup <span class="nv">options</span>
</span><span class='line'><span class="o">=</span>&gt; Ctrl-C to shutdown server
</span><span class='line'><span class="o">[</span>2013-08-05 22:13:15<span class="o">]</span> INFO  WEBrick 1.3.1
</span><span class='line'><span class="o">[</span>2013-08-05 22:13:15<span class="o">]</span> INFO  ruby 2.0.0 <span class="o">(</span>2013-06-27<span class="o">)</span> <span class="o">[</span>x86_64-darwin12.4.0<span class="o">]</span>
</span><span class='line'><span class="o">[</span>2013-08-05 22:13:15<span class="o">]</span> INFO  WEBrick::HTTPServer#start: <span class="nv">pid</span><span class="o">=</span>25428 <span class="nv">port</span><span class="o">=</span>3000
</span></code></pre></td></tr></table></div></figure>


<h2>Adding links between the 2 pages</h2>

<p>We want the user to be able to easily manuever between the 2 pages so let&rsquo;s put hyperlinks to the 2 pages at the top of every page (just add the 2 anchor bits in the html below).</p>

<figure class='code'><figcaption><span>app/views/layouts/application.html.erb </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'><span class="cp">&lt;!DOCTYPE html&gt;</span>
</span><span class='line'><span class="nt">&lt;html&gt;</span>
</span><span class='line'><span class="nt">&lt;head&gt;</span>
</span><span class='line'>  <span class="nt">&lt;title&gt;</span>TwitterApp<span class="nt">&lt;/title&gt;</span>
</span><span class='line'>  <span class="err">&lt;</span>%= stylesheet_link_tag    &quot;application&quot;, media: &quot;all&quot;, &quot;data-turbolinks-track&quot; =&gt; true %&gt;
</span><span class='line'>  <span class="err">&lt;</span>%= javascript_include_tag &quot;application&quot;, &quot;data-turbolinks-track&quot; =&gt; true %&gt;
</span><span class='line'>  <span class="err">&lt;</span>%= csrf_meta_tags %&gt;
</span><span class='line'><span class="nt">&lt;/head&gt;</span>
</span><span class='line'><span class="nt">&lt;body&gt;</span>
</span><span class='line'>  <span class="nt">&lt;a</span> <span class="na">href=</span><span class="s">&quot;/proposals&quot;</span><span class="nt">&gt;</span>JB Proposals<span class="nt">&lt;/a&gt;</span>
</span><span class='line'>  <span class="nt">&lt;a</span> <span class="na">href=</span><span class="s">&quot;/ausvotes&quot;</span><span class="nt">&gt;</span>#ausvotes<span class="nt">&lt;/a&gt;</span>
</span><span class='line'><span class="err">&lt;</span>%= yield %&gt;
</span><span class='line'>
</span><span class='line'><span class="nt">&lt;/body&gt;</span>
</span><span class='line'><span class="nt">&lt;/html&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>Just refresh the page to take affect. Notice that this change did not require you to restart WEBrick. Some changes, eg. config changes, will require you to do so.</p>

<ol>
<li><a href="http://en.wikipedia.org/wiki/Model%E2%80%93view%E2%80%93controller">Wikipedia on MVC</a></li>
<li><a href="http://www.codinghorror.com/blog/2008/05/understanding-model-view-controller.html">Jeff Atwood on MVC</a></li>
</ol>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Accessing Twitter's API]]></title>
    <link href="http://nizhu.github.io/ruby-intro-site/blog/2013/08/01/accessing-the-twitter-api/"/>
    <updated>2013-08-01T19:25:00+10:00</updated>
    <id>http://nizhu.github.io/ruby-intro-site/blog/2013/08/01/accessing-the-twitter-api</id>
    <content type="html"><![CDATA[<p>Since mid June this year, Twitter has forced users to use OAuth to authenticate and access its API. You can no longer access its data in a trivial way like the GitHub example before. You must get 4 keys from <a href="https://dev.twitter.com/apps">Twitter&rsquo;s developer page</a>: <code>Consumer key</code>, <code>Consumer secret</code>, <code>Access token</code> and <code>Access secret</code> &ndash; don&rsquo;t need to know what they mean yet, but be sure that the 2 secret keys are be shared. OAuth is a real pain. These 4 keys won&rsquo;t give you access. They&rsquo;ll let you get 3 more one use keys which you can then use to access the API.</p>

<p>Fortunately for you as a Ruby user, there are two libraries that will do all the menial work for you. <a href="https://github.com/sferik/twitter">Twitter</a> is a conveniently named library to access the standard Twitter API (it is not developed by Twitter Inc) while the other, <a href="https://github.com/tweetstream/tweetstream">TweetStream</a> is designed to use Twitter&rsquo;s streaming API (kind of like email pushing on your phone). It&rsquo;s unlikely that you&rsquo;ll need to use the streaming API for this assignment so I won&rsquo;t be showing you TweetStream.</p>

<h2>Twitter Gem</h2>

<p>Install the twitter gem with <code>gem install twitter</code> and make the following config file, replacing the upper case strings with the relevant keys.</p>

<figure class='code'><figcaption><span>twitter_config.rb </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="no">Twitter</span><span class="o">.</span><span class="n">configure</span> <span class="k">do</span> <span class="o">|</span><span class="n">config</span><span class="o">|</span>
</span><span class='line'>  <span class="n">config</span><span class="o">.</span><span class="n">consumer_key</span> <span class="o">=</span> <span class="no">YOUR_CONSUMER_KEY</span>
</span><span class='line'>  <span class="n">config</span><span class="o">.</span><span class="n">consumer_secret</span> <span class="o">=</span> <span class="no">YOUR_CONSUMER_SECRET</span>
</span><span class='line'>  <span class="n">config</span><span class="o">.</span><span class="n">oauth_token</span> <span class="o">=</span> <span class="no">YOUR_OAUTH_TOKEN</span>
</span><span class='line'>  <span class="n">config</span><span class="o">.</span><span class="n">oauth_token_secret</span> <span class="o">=</span> <span class="no">YOUR_OAUTH_TOKEN_SECRET</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>There are some usage examples <a href="https://github.com/sferik/twitter#usage-examples">here</a>, but there&rsquo;s plenty more functionality so do refer to the <a href="http://rdoc.info/gems/twitter">documentation</a>.</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="nb">require</span> <span class="s1">&#39;twitter&#39;</span>
</span><span class='line'><span class="nb">load</span> <span class="s1">&#39;twitter_config.rb&#39;</span>
</span></code></pre></td></tr></table></div></figure>


<p>Lets find the last person to have proposed to Justin Bieber</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">result</span> <span class="o">=</span> <span class="no">Twitter</span><span class="o">.</span><span class="n">search</span><span class="p">(</span><span class="s2">&quot;to:justinbieber marry me&quot;</span><span class="p">,</span> <span class="ss">:count</span> <span class="o">=&gt;</span> <span class="mi">1</span><span class="p">,</span> <span class="ss">:result_type</span> <span class="o">=&gt;</span> <span class="s2">&quot;recent&quot;</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="n">result</span><span class="o">.</span><span class="n">class</span>
</span><span class='line'><span class="c1"># Twitter::SearchResults</span>
</span><span class='line'>
</span><span class='line'><span class="n">result</span><span class="o">.</span><span class="n">statuses</span><span class="o">[</span><span class="mi">0</span><span class="o">].</span><span class="n">user</span><span class="o">.</span><span class="n">screen_name</span>
</span><span class='line'><span class="c1"># 4ever_beliebing</span>
</span></code></pre></td></tr></table></div></figure>


<p>Just to give another example, I&rsquo;m going to get the last tweet from each of users I&rsquo;m stalking.</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">f</span> <span class="o">=</span> <span class="no">Twitter</span><span class="o">.</span><span class="n">friends</span>
</span><span class='line'><span class="n">f</span><span class="o">.</span><span class="n">class</span>
</span><span class='line'><span class="c1"># Twitter::Cursor</span>
</span><span class='line'><span class="c1"># -- http://rdoc.info/gems/twitter/Twitter/Cursor</span>
</span><span class='line'>
</span><span class='line'><span class="n">f</span><span class="o">.</span><span class="n">collection</span><span class="o">.</span><span class="n">class</span>
</span><span class='line'><span class="c1"># Array</span>
</span><span class='line'>
</span><span class='line'><span class="n">f</span><span class="o">.</span><span class="n">collection</span><span class="o">[</span><span class="mi">0</span><span class="o">].</span><span class="n">class</span>
</span><span class='line'><span class="c1"># Twitter::User</span>
</span><span class='line'><span class="c1"># -- http://rdoc.info/gems/twitter/Twitter/User</span>
</span><span class='line'>
</span><span class='line'><span class="n">f</span><span class="o">.</span><span class="n">collection</span><span class="o">[</span><span class="mi">0</span><span class="o">].</span><span class="n">name</span>
</span><span class='line'><span class="c1"># &quot;John Oliver&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="n">f</span><span class="o">.</span><span class="n">collection</span><span class="o">[</span><span class="mi">0</span><span class="o">].</span><span class="n">status</span>
</span><span class='line'><span class="n">f</span><span class="o">.</span><span class="n">collection</span><span class="o">[</span><span class="mi">0</span><span class="o">].</span><span class="n">status</span><span class="o">.</span><span class="n">class</span>
</span><span class='line'><span class="c1"># Twitter::Tweet</span>
</span><span class='line'><span class="c1"># -- http://rdoc.info/gems/twitter/Twitter/Tweet</span>
</span><span class='line'>
</span><span class='line'><span class="n">f</span><span class="o">.</span><span class="n">collection</span><span class="o">[</span><span class="mi">0</span><span class="o">].</span><span class="n">status</span><span class="o">.</span><span class="n">text</span>
</span><span class='line'><span class="c1"># &quot;Mugabe is the Harlem Globetrotters of democracy. His winning record is undeniably impressive, but he doesn&#39;t really play by the rules.&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="k">for</span> <span class="n">user</span> <span class="k">in</span> <span class="n">f</span><span class="o">.</span><span class="n">collection</span><span class="o">.</span><span class="n">each</span>
</span><span class='line'>  <span class="nb">puts</span> <span class="s2">&quot;</span><span class="si">#{</span><span class="n">user</span><span class="o">.</span><span class="n">name</span><span class="si">}</span><span class="s2"> said &#39;</span><span class="si">#{</span><span class="n">user</span><span class="o">.</span><span class="n">status</span><span class="o">.</span><span class="n">text</span><span class="si">}</span><span class="s2">&#39;&quot;</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>Because we don&rsquo;t care about the return value, let&rsquo;s not do this in <code>irb</code></p>

<figure class='code'><figcaption><span>last_twitter_status.rb </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1">#!/usr/bin/env ruby</span>
</span><span class='line'><span class="nb">require</span> <span class="s1">&#39;twitter&#39;</span>
</span><span class='line'><span class="nb">load</span> <span class="s1">&#39;twitter_config.rb&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="n">f</span> <span class="o">=</span> <span class="no">Twitter</span><span class="o">.</span><span class="n">friends</span>
</span><span class='line'><span class="k">for</span> <span class="n">user</span> <span class="k">in</span> <span class="n">f</span><span class="o">.</span><span class="n">collection</span><span class="o">.</span><span class="n">each</span>
</span><span class='line'>  <span class="nb">puts</span> <span class="s2">&quot;</span><span class="si">#{</span><span class="n">user</span><span class="o">.</span><span class="n">name</span><span class="si">}</span><span class="s2"> said &#39;</span><span class="si">#{</span><span class="n">user</span><span class="o">.</span><span class="n">status</span><span class="o">.</span><span class="n">text</span><span class="si">}</span><span class="s2">&#39;&quot;</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>But there&rsquo;s still a problem, I&rsquo;m following more users than this.</p>

<p>This is because Twitter paginates the results to 20 by default.  So if there is more than 20 records, you&rsquo;ll have to iterate through each page to get all the results.</p>

<figure class='code'><figcaption><span>last_twitter_status_iterated.rb </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1">#!/usr/bin/env ruby</span>
</span><span class='line'><span class="nb">require</span> <span class="s1">&#39;twitter&#39;</span>
</span><span class='line'><span class="nb">load</span> <span class="s1">&#39;twitter_config.rb&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="n">cursor</span> <span class="o">=</span> <span class="o">-</span><span class="mi">1</span>
</span><span class='line'><span class="k">while</span> <span class="n">cursor</span> <span class="o">!=</span> <span class="mi">0</span> <span class="k">do</span>
</span><span class='line'>  <span class="n">f</span> <span class="o">=</span> <span class="no">Twitter</span><span class="o">.</span><span class="n">friends</span> <span class="ss">:cursor</span> <span class="o">=&gt;</span> <span class="n">cursor</span>
</span><span class='line'>  <span class="k">for</span> <span class="n">user</span> <span class="k">in</span> <span class="n">f</span><span class="o">.</span><span class="n">collection</span><span class="o">.</span><span class="n">each</span>
</span><span class='line'>    <span class="nb">puts</span> <span class="s2">&quot;</span><span class="si">#{</span><span class="n">user</span><span class="o">.</span><span class="n">name</span><span class="si">}</span><span class="s2"> said &#39;</span><span class="si">#{</span><span class="n">user</span><span class="o">.</span><span class="n">status</span><span class="o">.</span><span class="n">text</span><span class="si">}</span><span class="s2">&#39;&quot;</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>  <span class="n">cursor</span> <span class="o">=</span> <span class="n">f</span><span class="o">.</span><span class="n">next_cursor</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>Just to a more relevant example, this is to get the last 200 tweets with #ausvotes excluding retweets. Search results pagination work slightly different to friends &ndash; refer to documentation!!</p>

<p>Note that the count parameter refers to the number you want per page, although the maximum is 100.</p>

<figure class='code'><figcaption><span>recent_ausvotes.rb </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1">#!/usr/bin/env ruby</span>
</span><span class='line'><span class="nb">require</span> <span class="s1">&#39;twitter&#39;</span>
</span><span class='line'><span class="nb">load</span> <span class="s1">&#39;twitter_config.rb&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="n">max_id</span> <span class="o">=</span> <span class="o">-</span><span class="mi">1</span>
</span><span class='line'><span class="k">for</span> <span class="n">i</span> <span class="k">in</span> <span class="p">(</span><span class="mi">0</span><span class="o">.</span><span class="n">.</span><span class="mi">1</span><span class="p">)</span>
</span><span class='line'>  <span class="n">t</span> <span class="o">=</span> <span class="no">Twitter</span><span class="o">.</span><span class="n">search</span><span class="p">(</span><span class="s2">&quot;#ausvotes -rt&quot;</span><span class="p">,</span> <span class="ss">:count</span> <span class="o">=&gt;</span> <span class="mi">100</span><span class="p">,</span> <span class="ss">:result_type</span> <span class="o">=&gt;</span> <span class="s2">&quot;recent&quot;</span><span class="p">,</span> <span class="ss">:max_id</span> <span class="o">=&gt;</span> <span class="n">max_id</span><span class="p">)</span>
</span><span class='line'>  <span class="n">t</span><span class="o">.</span><span class="n">statuses</span><span class="o">.</span><span class="n">each</span> <span class="k">do</span> <span class="o">|</span> <span class="n">tweet</span> <span class="o">|</span>
</span><span class='line'>    <span class="nb">puts</span> <span class="s2">&quot;</span><span class="si">#{</span><span class="n">tweet</span><span class="o">.</span><span class="n">user</span><span class="o">.</span><span class="n">name</span><span class="si">}</span><span class="s2"> said </span><span class="si">#{</span><span class="n">tweet</span><span class="o">.</span><span class="n">text</span><span class="si">}</span><span class="s2">&quot;</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>  <span class="n">max_id</span> <span class="o">=</span> <span class="n">t</span><span class="o">.</span><span class="n">next_results</span><span class="o">[</span><span class="ss">:max_id</span><span class="o">]</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<ol>
<li><a href="https://github.com/sferik/twitter">RubyGem &ndash; Twitter</a></li>
<li><a href="https://github.com/tweetstream/tweetstream">RubyGem &ndash; Tweetstream</a></li>
<li><a href="https://dev.twitter.com/docs/auth">Twitter API Authentication Documentation</a></li>
<li><a href="https://dev.twitter.com/docs/api/1.1">Twitter API</a></li>
<li><a href="https://dev.twitter.com/apps">Twitter Developer Apps</a></li>
<li><a href="http://rdoc.info/gems/twitter">RDoc Twitter</a></li>
</ol>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Consuming JSON REST resource through HTTP]]></title>
    <link href="http://nizhu.github.io/ruby-intro-site/blog/2013/07/31/consuming-json-rest-resource-through-http/"/>
    <updated>2013-07-31T21:44:00+10:00</updated>
    <id>http://nizhu.github.io/ruby-intro-site/blog/2013/07/31/consuming-json-rest-resource-through-http</id>
    <content type="html"><![CDATA[<p>As you saw in the previous post, XML is an overly verbose format so in the last few years, what we call JSON (JavaScript Object Notation) has come to dominate web communication. Ideally I&rsquo;d be demonstrating this with Twitter&rsquo;s API since you&rsquo;re likely to use it for this assignment, but since mid June this year, the Twitter API requires OAuth to access. I will be address this in the next post.</p>

<p>If you&rsquo;ve been writing Javascript, you love JSON. If you haven&rsquo;t, you soon will. Note that spaces, tabs and line breaks are all optional. I&rsquo;ve just added those to make it easier to read.</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="s2">&quot;id&quot;</span><span class="o">:</span> <span class="mi">32</span><span class="p">,</span>
</span><span class='line'>  <span class="s2">&quot;name&quot;</span><span class="o">:</span> <span class="s2">&quot;Mother Duck&quot;</span><span class="p">,</span>
</span><span class='line'>  <span class="s2">&quot;children&quot;</span><span class="o">:</span><span class="p">[</span>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>      <span class="s2">&quot;id&quot;</span><span class="o">:</span> <span class="mi">12345</span><span class="p">,</span>
</span><span class='line'>      <span class="s2">&quot;name&quot;</span><span class="o">:</span> <span class="s2">&quot;Claire&quot;</span>
</span><span class='line'>    <span class="p">},</span>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>      <span class="s2">&quot;id&quot;</span><span class="o">:</span> <span class="mi">12372</span><span class="p">,</span>
</span><span class='line'>      <span class="s2">&quot;name&quot;</span><span class="o">:</span> <span class="s2">&quot;Daniel&quot;</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>  <span class="p">],</span>
</span><span class='line'>  <span class="s2">&quot;isAlive&quot;</span><span class="o">:</span> <span class="kc">true</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>That&rsquo;s all there is to JSON, very simple, very clear. <code>{}</code> encapsulates object/map/hash, while <code>[]</code> encapsulates an array, both of which can be nested infinitely. Otherwise only strings, numbers, booleans and null are supported values.</p>

<h2>Github API</h2>

<p>GitHub is an online source repository, extremely popular with open source projects. You won&rsquo;t be using any data from it for your projects, but it&rsquo;s the first public JSON API that came across my mind. I&rsquo;m sure you&rsquo;ll be using it somewhere in your career though. For this demonstration, I&rsquo;ll just be using the most simple of calls, retrieving the details of the GitHub user octocat. The documentation for GitHub&rsquo;s API is available <a href="http://developer.github.com/v3/">here</a>.</p>

<p>The easiest way to access this data, is to simply open a web browser and go to <code>https://api.github.com/users/octocat</code>. Next step further is accessing it through cURL.. <code>curl https://api.github.com/users/octocat</code>. Let&rsquo;s do it in Ruby.</p>

<h2>Retrieving with Net/HTTP and parsing with json</h2>

<p><a href="http://ruby-doc.org/stdlib-2.0/libdoc/net/http/rdoc/Net/HTTP.html">Net/HTTP</a> is a standard Ruby library, and it&rsquo;ll be your interface to the internet. JSON is a simple parser, but is not standard. As before, install the gem with <code>gem install json</code></p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="nb">require</span> <span class="s1">&#39;net/http&#39;</span>
</span><span class='line'><span class="nb">require</span> <span class="s1">&#39;json&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="n">uri</span> <span class="o">=</span> <span class="no">URI</span><span class="p">(</span><span class="s1">&#39;https://api.github.com/users/octocat&#39;</span><span class="p">)</span>
</span><span class='line'><span class="n">response</span> <span class="o">=</span> <span class="ss">Net</span><span class="p">:</span><span class="ss">:HTTP</span><span class="o">.</span><span class="n">get</span> <span class="n">uri</span>
</span><span class='line'><span class="n">octocat</span> <span class="o">=</span> <span class="no">JSON</span><span class="o">.</span><span class="n">parse</span> <span class="n">response</span>
</span><span class='line'>
</span><span class='line'><span class="n">octocat</span><span class="o">.</span><span class="n">keys</span>
</span><span class='line'><span class="c1"># [&quot;login&quot;, &quot;id&quot;, &quot;avatar_url&quot;, &quot;gravatar_id&quot;, &quot;url&quot;, &quot;html_url&quot;, &quot;followers_url&quot;, &quot;following_url&quot;, &quot;gists_url&quot;, &quot;starred_url&quot;, &quot;subscriptions_url&quot;, &quot;organizations_url&quot;, &quot;repos_url&quot;, &quot;events_url&quot;, &quot;received_events_url&quot;, &quot;type&quot;, &quot;name&quot;, &quot;company&quot;, &quot;blog&quot;, &quot;location&quot;, &quot;email&quot;, &quot;hireable&quot;, &quot;bio&quot;, &quot;public_repos&quot;, &quot;followers&quot;, &quot;following&quot;, &quot;created_at&quot;, &quot;updated_at&quot;, &quot;public_gists&quot;]</span>
</span><span class='line'>
</span><span class='line'><span class="n">octocat</span><span class="o">[</span><span class="s2">&quot;followers&quot;</span><span class="o">]</span>
</span><span class='line'><span class="c1"># 398</span>
</span><span class='line'><span class="n">octocat</span><span class="o">[</span><span class="s2">&quot;public_repos&quot;</span><span class="o">]</span>
</span><span class='line'><span class="c1"># 3</span>
</span><span class='line'><span class="n">octocat</span><span class="o">[</span><span class="s2">&quot;hireable&quot;</span><span class="o">]</span>
</span><span class='line'><span class="c1"># false</span>
</span></code></pre></td></tr></table></div></figure>


<p>I had some issues here with openssl on the Mac, but the update instructions with Homebrew found <a href="http://railsapps.github.io/openssl-certificate-verify-failed.html">here</a> worked perfectly.</p>

<ol>
<li><a href="http://json.org/example.html">JSON Examples</a></li>
<li><a href="http://ruby-doc.org/stdlib-2.0/libdoc/net/http/rdoc/Net/HTTP.html">Ruby Net/HTTP</a></li>
<li><a href="http://flori.github.io/json/doc/index.html">Rubygem json</a></li>
</ol>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Parsing XML with XMLSimple]]></title>
    <link href="http://nizhu.github.io/ruby-intro-site/blog/2013/07/31/parsing-xml-with-xmlsimple/"/>
    <updated>2013-07-31T20:19:00+10:00</updated>
    <id>http://nizhu.github.io/ruby-intro-site/blog/2013/07/31/parsing-xml-with-xmlsimple</id>
    <content type="html"><![CDATA[<p>For the purpose of this exercise, I&rsquo;ve downloaded and extracted a zip file from the AEC&rsquo;s site <code>wget wreckbea.ch/aec-mediafeed-results-standard-light-15508.xml</code> Ruby has an XML parser called REXML in its standard library, but it&rsquo;s known to be very slow &ndash; <a href="http://www.rubyinside.com/ruby-xml-performance-benchmarks-1641.html">Some 50 times slower than Nokogiri</a>. I would love to demonstrate Nokogiri, but unfortunately it&rsquo;s more complex to use than XmlSimple. XmlSimple parses the data into a native Ruby hash whereas Nokogiri has its own set of classes.</p>

<h1>Third Party libraries</h1>

<p>Third party libraries in Ruby are referred to as gems. Gem is an executable that comes with Ruby. Tell it to install, along with the name of the gem and it will download and install the gem that you want as well as all its dependencies&hellip;<code>gem install xml-simple</code></p>

<h1>Let&rsquo;s Parse!</h1>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="nb">require</span> <span class="s1">&#39;xmlsimple&#39;</span>
</span><span class='line'><span class="n">xml</span> <span class="o">=</span> <span class="no">File</span><span class="o">.</span><span class="n">read</span> <span class="s1">&#39;aec-mediafeed-results-standard-light-15508.xml&#39;</span><span class="p">;</span><span class="mi">0</span>
</span><span class='line'><span class="n">data</span> <span class="o">=</span> <span class="no">XmlSimple</span><span class="o">.</span><span class="n">xml_in</span> <span class="n">xml</span>
</span></code></pre></td></tr></table></div></figure>


<p>Parsing XML takes a little while, and XmlSimple isn&rsquo;t the most efficient of parsers. If speed is a concern at all, you should definitely look into <a href="http://nokogiri.org/">Nokogiri</a>.</p>

<p>Once it&rsquo;s done we can see what&rsquo;s in there one step at a time.</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">data</span><span class="o">.</span><span class="n">keys</span>
</span><span class='line'><span class="c1"># [&quot;Id&quot;, &quot;Created&quot;, &quot;SchemaVersion&quot;, &quot;EmlVersion&quot;, &quot;xmlns&quot;, &quot;xmlns:eml&quot;, &quot;xmlns:ds&quot;, &quot;xmlns:xal&quot;, &quot;xmlns:xnl&quot;, &quot;xmlns:ts&quot;, &quot;xmlns:xs&quot;, &quot;xs:schemaLocation&quot;, &quot;ManagingAuthority&quot;, &quot;MessageLanguage&quot;, &quot;MessageGenerator&quot;, &quot;Cycle&quot;, &quot;Results&quot;]</span>
</span><span class='line'>
</span><span class='line'><span class="n">data</span><span class="o">[</span><span class="s2">&quot;Results&quot;</span><span class="o">].</span><span class="n">keys</span>
</span><span class='line'><span class="c1"># NoMethodError</span>
</span><span class='line'>
</span><span class='line'><span class="n">data</span><span class="o">[</span><span class="s2">&quot;Results&quot;</span><span class="o">].</span><span class="n">class</span>
</span><span class='line'><span class="c1"># Array</span>
</span><span class='line'>
</span><span class='line'><span class="n">data</span><span class="o">[</span><span class="s2">&quot;Results&quot;</span><span class="o">][</span><span class="mi">0</span><span class="o">].</span><span class="n">class</span>
</span><span class='line'><span class="c1"># Hash</span>
</span><span class='line'>
</span><span class='line'><span class="n">data</span><span class="o">[</span><span class="s2">&quot;Results&quot;</span><span class="o">][</span><span class="mi">0</span><span class="o">][</span><span class="s2">&quot;Election&quot;</span><span class="o">][</span><span class="mi">0</span><span class="o">][</span><span class="s2">&quot;House&quot;</span><span class="o">][</span><span class="mi">0</span><span class="o">][</span><span class="s2">&quot;Contests&quot;</span><span class="o">][</span><span class="mi">0</span><span class="o">][</span><span class="s2">&quot;Contest&quot;</span><span class="o">][</span><span class="mi">0</span><span class="o">].</span><span class="n">keys</span>
</span><span class='line'><span class="c1"># [&quot;Projected&quot;, &quot;ContestIdentifier&quot;, &quot;Enrolment&quot;, &quot;FirstPreferences&quot;, &quot;TwoCandidatePreferred&quot;, &quot;TwoPartyPreferred&quot;, &quot;PollingPlaces&quot;]</span>
</span><span class='line'>
</span><span class='line'><span class="n">data</span><span class="o">[</span><span class="s2">&quot;Results&quot;</span><span class="o">][</span><span class="mi">0</span><span class="o">][</span><span class="s2">&quot;Election&quot;</span><span class="o">][</span><span class="mi">0</span><span class="o">][</span><span class="s2">&quot;House&quot;</span><span class="o">][</span><span class="mi">0</span><span class="o">][</span><span class="s2">&quot;Contests&quot;</span><span class="o">][</span><span class="mi">0</span><span class="o">][</span><span class="s2">&quot;Contest&quot;</span><span class="o">][</span><span class="mi">0</span><span class="o">][</span><span class="s2">&quot;TwoPartyPreferred&quot;</span><span class="o">][</span><span class="mi">0</span><span class="o">][</span><span class="s2">&quot;Coalition&quot;</span><span class="o">][</span><span class="mi">0</span><span class="o">][</span><span class="s2">&quot;Votes&quot;</span><span class="o">]</span>
</span><span class='line'><span class="c1"># 0</span>
</span><span class='line'>
</span><span class='line'><span class="n">data</span><span class="o">[</span><span class="s2">&quot;Results&quot;</span><span class="o">][</span><span class="mi">0</span><span class="o">][</span><span class="s2">&quot;Election&quot;</span><span class="o">][</span><span class="mi">0</span><span class="o">][</span><span class="s2">&quot;House&quot;</span><span class="o">][</span><span class="mi">0</span><span class="o">][</span><span class="s2">&quot;Contests&quot;</span><span class="o">][</span><span class="mi">0</span><span class="o">][</span><span class="s2">&quot;Contest&quot;</span><span class="o">][</span><span class="mi">0</span><span class="o">][</span><span class="s2">&quot;Enrolment&quot;</span><span class="o">]</span>
</span><span class='line'><span class="c1"># 124215</span>
</span></code></pre></td></tr></table></div></figure>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Classes]]></title>
    <link href="http://nizhu.github.io/ruby-intro-site/blog/2013/07/31/classes/"/>
    <updated>2013-07-31T09:14:00+10:00</updated>
    <id>http://nizhu.github.io/ruby-intro-site/blog/2013/07/31/classes</id>
    <content type="html"><![CDATA[<p>Ruby is a Object Oriented language so it&rsquo;s no less than intuitive to have classes. The following code block shows the basic syntax of a Ruby class.</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">Counter</span>
</span><span class='line'>  <span class="vc">@@classCount</span> <span class="o">=</span> <span class="mi">0</span>
</span><span class='line'>  <span class="vi">@instanceCount</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">initialize</span><span class="p">(</span><span class="n">startInstanceCount</span><span class="p">)</span>
</span><span class='line'>    <span class="vi">@instanceCount</span> <span class="o">=</span> <span class="n">startInstanceCount</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">icIncrement</span>
</span><span class='line'>    <span class="vi">@instanceCount</span> <span class="o">+=</span> <span class="mi">1</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nc">self</span><span class="o">.</span><span class="nf">ccIncrement</span>
</span><span class='line'>    <span class="vc">@@classCount</span> <span class="o">+=</span> <span class="mi">1</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">to_s</span>
</span><span class='line'>    <span class="s2">&quot;classCount = </span><span class="si">#{</span><span class="vc">@@classCount</span><span class="si">}</span><span class="s2"> and instanceCount = </span><span class="si">#{</span><span class="vi">@instanceCount</span><span class="si">}</span><span class="s2">&quot;</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>We have a Class variable, <code>@@classCount</code>. This is equivalent to the keyword <code>static</code> in Java. There&rsquo;s an Instance variable <code>@instanceCount</code>.</p>

<p>Then there are the methods. <code>initialize</code> is the constructor used when you run <code>Counter.new</code>, <code>icIncrement</code> is an instance method, while <code>self.ccIncrement</code> is a class method &ndash; called with <code>Counter.ccIncrement</code>.</p>

<p>Finally <code>to_s</code> is the conversion of the class to a String, just like <code>toString()</code>.</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">a</span> <span class="o">=</span> <span class="no">Counter</span><span class="o">.</span><span class="n">new</span> <span class="mi">0</span>
</span><span class='line'><span class="n">b</span> <span class="o">=</span> <span class="no">Counter</span><span class="o">.</span><span class="n">new</span> <span class="mi">0</span>
</span><span class='line'>
</span><span class='line'><span class="n">a</span><span class="o">.</span><span class="n">ccIncrement</span>
</span><span class='line'><span class="n">a</span><span class="o">.</span><span class="n">icIncrement</span>
</span><span class='line'>
</span><span class='line'><span class="nb">puts</span> <span class="n">b</span>
</span><span class='line'><span class="c1"># classCount = 1 and instanceCount = 0</span>
</span><span class='line'>
</span><span class='line'><span class="n">b</span> <span class="o">=</span> <span class="no">Counter</span><span class="o">.</span><span class="n">new</span> <span class="mi">5</span>
</span><span class='line'><span class="nb">puts</span> <span class="n">b</span>
</span><span class='line'><span class="c1"># classCount = 1 and instanceCount = 5</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Variable Scope</h2>

<p>Scope-wise, there are 5 different types of variables in Ruby and they are simply differentiated by the first character of their name.</p>

<ol>
<li>$: Global</li>
<li>@@: Class</li>
<li>@: Instance</li>
<li>[A-Z]: Constant</li>
<li>[a-z_]: Local</li>
</ol>


<p>Note that Constants can still be changed. The interpreter will simply issue a warning that that is the case, but the value assigning will proceed.</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="no">Aconstant</span> <span class="o">=</span> <span class="mi">1</span>
</span><span class='line'><span class="no">Aconstant</span> <span class="o">=</span> <span class="mi">2</span>
</span><span class='line'><span class="c1"># warning: already initialized constant Aconstant</span>
</span><span class='line'><span class="c1"># warning: previous definition of Aconstant was here</span>
</span><span class='line'><span class="c1"># 2</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Dynamic Typing</h2>

<p>Ruby doesn&rsquo;t care what class an object is, as long as it does what you want it to do. If it quacks like a duck, it is a duck.</p>

<p>I&rsquo;ve prepared the 3 files below already. To see them, checkout the branch <code>git checkout dynamic_typing</code>. This code is based on the code snippets in the Ruby Cookbook which was based on Ruby 1.8</p>

<figure class='code'><figcaption><span>duck.rb </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">Duck</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">quack</span>
</span><span class='line'>    <span class="s1">&#39;Quack!&#39;</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span>humans.rb </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">Man</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">quack</span>
</span><span class='line'>    <span class="s1">&#39;Moo!&#39;</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">scream</span>
</span><span class='line'>    <span class="s1">&#39;AHHHHHH&#39;</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="k">class</span> <span class="nc">Woman</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">scream</span>
</span><span class='line'>     <span class="s1">&#39;AHHHH&#39;</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span>make_it_quack.rb </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">def</span> <span class="nf">make_it_quack</span><span class="p">(</span><span class="n">duck</span><span class="p">)</span>
</span><span class='line'>  <span class="nb">puts</span> <span class="n">duck</span><span class="o">.</span><span class="n">quack</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>Let&rsquo;s play with again. This time, load irb with <code>irb -I .</code>. This will add the current directory to the path that the require command uses so it can find the 3 files above.</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">d</span> <span class="o">=</span> <span class="no">Duck</span><span class="o">.</span><span class="n">new</span>
</span><span class='line'><span class="n">m</span> <span class="o">=</span> <span class="no">Man</span><span class="o">.</span><span class="n">new</span>
</span><span class='line'><span class="n">w</span> <span class="o">=</span> <span class="no">Woman</span><span class="o">.</span><span class="n">new</span>
</span><span class='line'>
</span><span class='line'><span class="n">make_it_quack</span><span class="p">(</span><span class="n">d</span><span class="p">)</span>
</span><span class='line'><span class="c1"># Quack!</span>
</span><span class='line'><span class="n">make_it_quack</span><span class="p">(</span><span class="n">m</span><span class="p">)</span>
</span><span class='line'><span class="c1"># Moo!</span>
</span><span class='line'><span class="n">make_it_quack</span><span class="p">(</span><span class="n">w</span><span class="p">)</span>
</span><span class='line'><span class="c1"># NoMethodError: undefined method `quack&#39; for #&lt;Woman:0x007fb2d91ab3d0&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>Unfortunately it seems like function parameters can no longer be given a type so the example isn&rsquo;t the most clear. This is what it looks like in the book.</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">def</span> <span class="nf">make_it_quack</span><span class="p">(</span><span class="no">Duck</span> <span class="n">duck</span><span class="p">)</span>
</span><span class='line'>  <span class="nb">puts</span> <span class="n">duck</span><span class="o">.</span><span class="n">quack</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="n">w</span> <span class="o">=</span> <span class="no">Woman</span><span class="o">.</span><span class="n">new</span>
</span><span class='line'><span class="n">make_it_quack</span><span class="p">(</span><span class="n">w</span><span class="p">)</span>
</span><span class='line'><span class="c1"># TypeException: object not of type Duck</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Duck Punching</h2>

<p>So what if our ducks (Man) don&rsquo;t quack? Then we punch them until it does.</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">make_it_quack</span><span class="p">(</span><span class="n">m</span><span class="p">)</span>
</span><span class='line'><span class="c1"># Moo!</span>
</span><span class='line'>
</span><span class='line'><span class="k">class</span> <span class="nc">Man</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">quack</span>
</span><span class='line'>    <span class="s2">&quot;Quack!&quot;</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="n">make_it_quack</span><span class="p">(</span><span class="n">m</span><span class="p">)</span>
</span><span class='line'><span class="c1"># Quack!</span>
</span><span class='line'>
</span><span class='line'><span class="n">m</span><span class="o">.</span><span class="n">scream</span>
</span><span class='line'><span class="c1"># AHHHHHH</span>
</span></code></pre></td></tr></table></div></figure>


<p>Just to be clear, we can also do the same to the Woman class.</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">make_it_quack</span><span class="p">(</span><span class="n">w</span><span class="p">)</span>
</span><span class='line'><span class="ss">NoMethodError</span><span class="p">:</span> <span class="n">undefined</span> <span class="nb">method</span> <span class="sb">`quack&#39; for #&lt;Woman:0x007fbe7b99e800&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sb">class Woman</span>
</span><span class='line'><span class="sb">  def quack</span>
</span><span class='line'><span class="sb">    &quot;Quack!&quot;</span>
</span><span class='line'><span class="sb">  end</span>
</span><span class='line'><span class="sb">end</span>
</span><span class='line'>
</span><span class='line'><span class="sb">make_it_quack(w)</span>
</span><span class='line'><span class="sb"># Quack!</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Functions]]></title>
    <link href="http://nizhu.github.io/ruby-intro-site/blog/2013/07/30/functions/"/>
    <updated>2013-07-30T12:55:00+10:00</updated>
    <id>http://nizhu.github.io/ruby-intro-site/blog/2013/07/30/functions</id>
    <content type="html"><![CDATA[<p>Firstly the syntax. Let&rsquo;s first define a very basic function we can use for this post.</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">def</span> <span class="nf">print_stuff</span><span class="p">(</span><span class="n">str1</span><span class="p">,</span> <span class="n">str2</span><span class="p">,</span> <span class="n">reverse</span> <span class="o">=</span> <span class="kp">false</span><span class="p">)</span>
</span><span class='line'>  <span class="k">if</span> <span class="n">reverse</span>
</span><span class='line'>    <span class="nb">puts</span> <span class="s2">&quot;</span><span class="si">#{</span><span class="n">str2</span><span class="si">}</span><span class="s2"> and </span><span class="si">#{</span><span class="n">str1</span><span class="si">}</span><span class="s2"> received!&quot;</span>
</span><span class='line'>  <span class="k">else</span>
</span><span class='line'>    <span class="nb">puts</span> <span class="s2">&quot;</span><span class="si">#{</span><span class="n">str1</span><span class="si">}</span><span class="s2"> and </span><span class="si">#{</span><span class="n">str2</span><span class="si">}</span><span class="s2"> received!&quot;</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>  <span class="n">str</span> <span class="o">=</span> <span class="n">str1</span> <span class="o">+</span> <span class="n">str2</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<h3>Calling functions</h3>

<p>Brackets around function parameters is optional in Ruby. However, sometimes it&rsquo;s useful to include them regardless for clarity&rsquo;s sake.</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">print_stuff</span><span class="p">(</span><span class="s2">&quot;First argument&quot;</span><span class="p">,</span> <span class="s2">&quot;Second argument&quot;</span><span class="p">)</span>
</span><span class='line'><span class="c1"># First argument and Second argument received!</span>
</span><span class='line'>
</span><span class='line'><span class="n">print_stuff</span> <span class="s2">&quot;First argument&quot;</span><span class="p">,</span> <span class="s2">&quot;Second argument&quot;</span>
</span><span class='line'><span class="c1"># First argument and Second argument received!</span>
</span></code></pre></td></tr></table></div></figure>


<p>Arguments can be made optional by giving them a default value.</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">print_stuff</span><span class="p">(</span><span class="s2">&quot;First argument&quot;</span><span class="p">,</span> <span class="s2">&quot;Second argument&quot;</span><span class="p">,</span> <span class="kp">false</span><span class="p">)</span>
</span><span class='line'><span class="c1"># First argument and Second argument received!</span>
</span><span class='line'>
</span><span class='line'><span class="n">print_stuff</span><span class="p">(</span><span class="s2">&quot;First argument&quot;</span><span class="p">,</span> <span class="s2">&quot;Second argument&quot;</span><span class="p">,</span> <span class="kp">true</span><span class="p">)</span>
</span><span class='line'><span class="c1"># Second argument and First argument received!</span>
</span></code></pre></td></tr></table></div></figure>


<h3>Return value</h3>

<p>As you may have already noticed, <code>print_stuff</code> does use <code>return</code> even though it does exist in Ruby and it does exactly what you&rsquo;d expect. If the return value is not specified, Ruby will return the value returned in the last executed line of the block</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">def</span> <span class="nf">add</span><span class="p">(</span><span class="n">a</span><span class="p">,</span> <span class="n">b</span><span class="p">)</span>
</span><span class='line'>  <span class="n">a</span> <span class="o">+</span> <span class="n">b</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="nb">puts</span> <span class="n">add</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">)</span>
</span><span class='line'><span class="c1"># 3</span>
</span><span class='line'>
</span><span class='line'><span class="k">def</span> <span class="nf">add_return</span><span class="p">(</span><span class="n">a</span><span class="p">,</span> <span class="n">b</span><span class="p">)</span>
</span><span class='line'>  <span class="k">return</span> <span class="n">a</span> <span class="o">+</span> <span class="n">b</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="nb">puts</span> <span class="n">add_return</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span><span class="mi">2</span><span class="p">)</span>
</span><span class='line'><span class="c1"># 3</span>
</span><span class='line'>
</span><span class='line'><span class="k">def</span> <span class="nf">add_print</span><span class="p">(</span><span class="n">a</span><span class="p">,</span> <span class="n">b</span><span class="p">)</span>
</span><span class='line'>  <span class="n">a</span> <span class="o">+</span> <span class="n">b</span>
</span><span class='line'>  <span class="nb">print</span> <span class="s2">&quot;add successful&quot;</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="nb">puts</span> <span class="n">add_print</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span><span class="mi">2</span><span class="p">)</span>
</span><span class='line'><span class="c1"># add successful</span>
</span></code></pre></td></tr></table></div></figure>


<p>Because <code>print "add successful"</code> returns <code>nil</code>, <code>add_print</code> returns nil.</p>

<h1>Error Handling</h1>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">def</span> <span class="nf">do_something</span>
</span><span class='line'>  <span class="k">raise</span> <span class="s2">&quot;Failed to do something&quot;</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="n">raise_exception</span>
</span><span class='line'><span class="c1"># RuntimeError: Failed to do something</span>
</span><span class='line'>
</span><span class='line'><span class="k">begin</span>
</span><span class='line'>  <span class="n">do_something</span>
</span><span class='line'>  <span class="nb">puts</span> <span class="s2">&quot;Done something&quot;</span>
</span><span class='line'><span class="k">rescue</span>
</span><span class='line'>  <span class="nb">puts</span> <span class="s2">&quot;Rescuing from exception&quot;</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'><span class="c1"># Rescuing from exception</span>
</span></code></pre></td></tr></table></div></figure>


<p><code>retry</code> will return the cursor to start of the begin block it belongs to</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">i</span> <span class="o">=</span> <span class="mi">0</span>
</span><span class='line'><span class="k">begin</span>
</span><span class='line'>  <span class="nb">puts</span> <span class="s2">&quot;</span><span class="si">#{</span><span class="n">i</span><span class="si">}</span><span class="s2">&quot;</span>
</span><span class='line'>  <span class="n">i</span> <span class="o">+=</span> <span class="mi">1</span>
</span><span class='line'>  <span class="k">if</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="mi">2</span>
</span><span class='line'>    <span class="n">do_something</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>  <span class="nb">puts</span> <span class="s2">&quot;All done!&quot;</span>
</span><span class='line'><span class="k">rescue</span>
</span><span class='line'>  <span class="k">retry</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'><span class="c1"># 0</span>
</span><span class='line'><span class="c1"># 1</span>
</span><span class='line'><span class="c1"># All done!</span>
</span></code></pre></td></tr></table></div></figure>


<p>Also relevant later on, <a href="http://innig.net/software/ruby/closures-in-ruby">Closures</a> and <a href="https://rubymonk.com/learning/books/2-metaprogramming-ruby/chapters/32-introduction-to-metaprogramming/lessons/75-being-meta">Metaprogramming</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Hash &amp; Symbols]]></title>
    <link href="http://nizhu.github.io/ruby-intro-site/blog/2013/07/29/hash-and-symbols/"/>
    <updated>2013-07-29T22:46:00+10:00</updated>
    <id>http://nizhu.github.io/ruby-intro-site/blog/2013/07/29/hash-and-symbols</id>
    <content type="html"><![CDATA[<p>Maps in the data structure sense is referred to in Ruby as Hashes. Map in Ruby is used in its functional programming definition.</p>

<h3>Construction</h3>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">a</span> <span class="o">=</span> <span class="p">{</span> <span class="s2">&quot;a&quot;</span> <span class="o">=&gt;</span> <span class="s2">&quot;b&quot;</span><span class="p">,</span> <span class="mi">3</span> <span class="o">=&gt;</span> <span class="s2">&quot;d&quot;</span> <span class="p">}</span>
</span><span class='line'><span class="c1"># {&quot;a&quot;=&gt;&quot;b&quot;, 3=&gt;&quot;d&quot;}</span>
</span><span class='line'><span class="n">b</span> <span class="o">=</span> <span class="no">Hash</span><span class="p">(</span><span class="s2">&quot;a&quot;</span> <span class="o">=&gt;</span> <span class="s2">&quot;b&quot;</span><span class="p">,</span> <span class="mi">3</span> <span class="o">=&gt;</span> <span class="s2">&quot;d&quot;</span><span class="p">)</span>
</span><span class='line'><span class="c1"># {&quot;a&quot;=&gt;&quot;b&quot;, 3=&gt;&quot;d&quot;}</span>
</span><span class='line'>
</span><span class='line'><span class="n">c</span> <span class="o">=</span> <span class="p">{}</span>
</span><span class='line'><span class="n">d</span> <span class="o">=</span> <span class="no">Hash</span><span class="o">.</span><span class="n">new</span>
</span><span class='line'>
</span><span class='line'><span class="n">e</span> <span class="o">=</span> <span class="no">Hash</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="mi">0</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<h3>Testing for Equality</h3>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">a</span><span class="o">==</span><span class="n">b</span>
</span><span class='line'><span class="c1"># true</span>
</span><span class='line'><span class="n">a</span><span class="o">.</span><span class="n">equal?</span> <span class="n">b</span>
</span><span class='line'><span class="c1"># false</span>
</span><span class='line'>
</span><span class='line'><span class="n">c</span><span class="o">==</span><span class="n">d</span>
</span><span class='line'><span class="c1"># true</span>
</span><span class='line'><span class="n">c</span><span class="o">.</span><span class="n">equal?</span> <span class="n">d</span>
</span><span class='line'><span class="c1"># false</span>
</span></code></pre></td></tr></table></div></figure>


<h3>Retrieving from Hash</h3>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">a</span><span class="o">[</span><span class="s2">&quot;a&quot;</span><span class="o">]</span>
</span><span class='line'><span class="c1"># &quot;b&quot;</span>
</span><span class='line'><span class="n">a</span><span class="o">[</span><span class="mi">3</span><span class="o">]</span>
</span><span class='line'><span class="c1"># &quot;d&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="n">a</span><span class="o">[</span><span class="mi">4</span><span class="o">]</span>
</span><span class='line'><span class="c1"># nil</span>
</span><span class='line'><span class="n">e</span><span class="o">[</span><span class="mi">4</span><span class="o">]</span>
</span><span class='line'><span class="c1"># 0</span>
</span></code></pre></td></tr></table></div></figure>


<h3>Adding values to the Hash</h3>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">a</span><span class="o">[</span><span class="mi">5</span><span class="o">]</span> <span class="o">=</span> <span class="mi">6</span>
</span><span class='line'><span class="nb">puts</span> <span class="n">a</span>
</span><span class='line'><span class="c1"># {&quot;a&quot;=&gt;&quot;b&quot;, 3=&gt;&quot;d&quot;, 5=&gt;6}</span>
</span></code></pre></td></tr></table></div></figure>


<h3>Other useful functions</h3>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">b</span><span class="o">.</span><span class="n">clear</span>
</span><span class='line'><span class="nb">puts</span> <span class="n">b</span>
</span><span class='line'><span class="c1"># {}</span>
</span><span class='line'>
</span><span class='line'><span class="n">a</span><span class="o">.</span><span class="n">empty?</span>
</span><span class='line'><span class="c1"># false</span>
</span><span class='line'><span class="n">b</span><span class="o">.</span><span class="n">empty?</span>
</span><span class='line'><span class="c1"># true</span>
</span><span class='line'>
</span><span class='line'><span class="n">a</span><span class="o">.</span><span class="n">length</span>
</span><span class='line'><span class="c1"># 3</span>
</span><span class='line'>
</span><span class='line'><span class="n">a</span><span class="o">.</span><span class="n">keys</span>
</span><span class='line'><span class="c1"># [&quot;a&quot;, 3, 5]</span>
</span><span class='line'><span class="n">a</span><span class="o">.</span><span class="n">values</span>
</span><span class='line'><span class="c1"># [&quot;b&quot;, &quot;d&quot;, 6]</span>
</span></code></pre></td></tr></table></div></figure>


<h3>Iterating through the hash</h3>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">a</span><span class="o">.</span><span class="n">each</span> <span class="p">{</span> <span class="o">|</span><span class="n">k</span><span class="p">,</span><span class="n">v</span><span class="o">|</span> <span class="nb">puts</span> <span class="s2">&quot;The value for </span><span class="si">#{</span><span class="n">k</span><span class="si">}</span><span class="s2"> is </span><span class="si">#{</span><span class="n">v</span><span class="si">}</span><span class="s2">&quot;</span> <span class="p">}</span>
</span><span class='line'><span class="c1"># The value for a is b</span>
</span><span class='line'><span class="c1"># The value for 3 is d</span>
</span><span class='line'><span class="c1"># The value for 5 is </span>
</span><span class='line'>
</span><span class='line'><span class="n">a</span><span class="o">.</span><span class="n">each_key</span> <span class="p">{</span> <span class="o">|</span><span class="n">k</span><span class="o">|</span> <span class="nb">puts</span> <span class="s2">&quot;The value for </span><span class="si">#{</span><span class="n">k</span><span class="si">}</span><span class="s2"> is </span><span class="si">#{</span><span class="n">a</span><span class="o">[</span><span class="n">k</span><span class="o">]</span><span class="si">}</span><span class="s2">&quot;</span> <span class="p">}</span>
</span><span class='line'><span class="c1"># The value for a is b</span>
</span><span class='line'><span class="c1"># The value for 3 is d</span>
</span><span class='line'><span class="c1"># The value for 5 is 6</span>
</span><span class='line'>
</span><span class='line'><span class="n">a</span><span class="o">.</span><span class="n">each_value</span> <span class="p">{</span> <span class="o">|</span><span class="n">v</span><span class="o">|</span> <span class="nb">puts</span> <span class="n">v</span> <span class="p">}</span>
</span><span class='line'><span class="c1"># b</span>
</span><span class='line'><span class="c1"># d</span>
</span><span class='line'><span class="c1"># 6</span>
</span><span class='line'>
</span><span class='line'><span class="n">a</span><span class="o">.</span><span class="n">each</span> <span class="k">do</span> <span class="o">|</span><span class="n">k</span><span class="p">,</span><span class="n">v</span><span class="o">|</span>
</span><span class='line'>  <span class="nb">puts</span> <span class="s2">&quot;The value for </span><span class="si">#{</span><span class="n">k</span><span class="si">}</span><span class="s2"> is </span><span class="si">#{</span><span class="n">v</span><span class="si">}</span><span class="s2">&quot;</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'><span class="c1"># The value for a is b</span>
</span><span class='line'><span class="c1"># The value for 3 is d</span>
</span><span class='line'><span class="c1"># The value for 5 is 6</span>
</span></code></pre></td></tr></table></div></figure>


<h1>Symbols</h1>

<p>Fixnum always have the same object_id, and we can tell Ruby to do that to Strings too &ndash; it&rsquo;s what we call a Symbol. While a new string will be created every time the same String literal is used, the same symbol will always point to the same object in memory. This also means that Ruby&rsquo;s automatic garbage collection will not recycle symbols.</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="s2">&quot;abc&quot;</span><span class="o">.</span><span class="n">object_id</span>
</span><span class='line'><span class="c1"># 70139181776180</span>
</span><span class='line'><span class="s2">&quot;abc&quot;</span><span class="o">.</span><span class="n">object_id</span>
</span><span class='line'><span class="c1"># 70139181819060</span>
</span><span class='line'>
</span><span class='line'><span class="ss">:abc</span><span class="o">.</span><span class="n">object_id</span>
</span><span class='line'><span class="c1"># 1024808</span>
</span><span class='line'><span class="ss">:abc</span><span class="o">.</span><span class="n">object_id</span>
</span><span class='line'><span class="c1"># 1024808</span>
</span></code></pre></td></tr></table></div></figure>


<p>Because of this, Symbols are the preferred way to set and get Hash elements.</p>

<p><a href="http://shop.oreilly.com/product/9780596523695.do">Ruby Cookbook</a> attributes this quote to <a href="http://onestepback.org/">Jim Weirich</a>:</p>

<blockquote><p>If the contents (the sequence of characters) of the object are important, use a string.
If the identity of the object is important, use a symbol.</p></blockquote>

<p>Do this..</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">h</span> <span class="o">=</span> <span class="no">Hash</span><span class="o">.</span><span class="n">new</span>
</span><span class='line'><span class="n">h</span><span class="o">[</span><span class="ss">:abc</span><span class="o">]</span> <span class="o">=</span> <span class="s2">&quot;xyz&quot;</span>
</span><span class='line'><span class="nb">puts</span> <span class="n">h</span><span class="o">[</span><span class="ss">:abc</span><span class="o">]</span>
</span></code></pre></td></tr></table></div></figure>


<p>but don&rsquo;t do this..</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">h</span> <span class="o">=</span> <span class="no">Hash</span><span class="o">.</span><span class="n">new</span>
</span><span class='line'><span class="n">h</span><span class="o">[</span><span class="s2">&quot;abc&quot;</span><span class="o">]</span> <span class="o">=</span> <span class="ss">:xyz</span>
</span><span class='line'><span class="nb">puts</span> <span class="o">[</span><span class="s2">&quot;abc&quot;</span><span class="o">]</span>
</span><span class='line'><span class="c1"># xyz</span>
</span></code></pre></td></tr></table></div></figure>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Loops]]></title>
    <link href="http://nizhu.github.io/ruby-intro-site/blog/2013/07/28/loops/"/>
    <updated>2013-07-28T21:09:00+10:00</updated>
    <id>http://nizhu.github.io/ruby-intro-site/blog/2013/07/28/loops</id>
    <content type="html"><![CDATA[<p>Like the if statements you saw 2 posts prior, there are many ways to construct loops. Not that there is no increment/decrement, <code>++/--</code>, operation in Ruby.</p>

<p>There is the while loop you&rsquo;re used to</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">i</span> <span class="o">=</span> <span class="mi">0</span>
</span><span class='line'><span class="k">while</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="mi">3</span> <span class="k">do</span>
</span><span class='line'>  <span class="nb">puts</span> <span class="n">i</span>
</span><span class='line'>  <span class="n">i</span> <span class="o">+=</span> <span class="mi">1</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'><span class="c1"># 0</span>
</span><span class='line'><span class="c1"># 1</span>
</span><span class='line'><span class="c1"># 2</span>
</span></code></pre></td></tr></table></div></figure>


<p>While loops with the test at the end</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">i</span> <span class="o">=</span> <span class="mi">0</span>
</span><span class='line'><span class="k">begin</span>
</span><span class='line'>  <span class="nb">puts</span> <span class="n">i</span>
</span><span class='line'>  <span class="n">i</span> <span class="o">+=</span> <span class="mi">1</span>
</span><span class='line'><span class="k">end</span> <span class="k">while</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="mi">3</span>
</span><span class='line'><span class="c1"># 0</span>
</span><span class='line'><span class="c1"># 1</span>
</span><span class='line'><span class="c1"># 2</span>
</span><span class='line'>
</span><span class='line'><span class="n">i</span> <span class="o">=</span> <span class="mi">0</span>
</span><span class='line'><span class="k">begin</span>
</span><span class='line'>  <span class="nb">puts</span> <span class="n">i</span>
</span><span class='line'>  <span class="n">i</span> <span class="o">+=</span> <span class="mi">1</span>
</span><span class='line'><span class="k">end</span> <span class="k">while</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="mi">0</span>
</span><span class='line'><span class="c1"># 0</span>
</span></code></pre></td></tr></table></div></figure>


<p>There&rsquo;s the until loops which run while the condition is false</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">i</span> <span class="o">=</span> <span class="mi">0</span>
</span><span class='line'><span class="k">until</span> <span class="n">i</span> <span class="o">&gt;</span> <span class="mi">2</span>
</span><span class='line'>  <span class="nb">puts</span> <span class="n">i</span>
</span><span class='line'>  <span class="n">i</span> <span class="o">+=</span> <span class="mi">1</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'><span class="c1"># 0</span>
</span><span class='line'><span class="c1"># 1</span>
</span><span class='line'><span class="c1"># 2</span>
</span><span class='line'>
</span><span class='line'><span class="n">i</span> <span class="o">=</span> <span class="mi">0</span>
</span><span class='line'><span class="k">begin</span>
</span><span class='line'>  <span class="nb">puts</span> <span class="n">i</span>
</span><span class='line'>  <span class="n">i</span> <span class="o">+=</span> <span class="mi">1</span>
</span><span class='line'><span class="k">end</span> <span class="k">until</span> <span class="n">i</span> <span class="o">&gt;=</span> <span class="mi">0</span>
</span></code></pre></td></tr></table></div></figure>


<p>And finally, my favourite &ndash; the for loops. If you already have a list to iterate through, great.</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">a</span> <span class="o">=</span> <span class="o">[</span><span class="mi">0</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="o">]</span>
</span><span class='line'><span class="k">for</span> <span class="n">i</span> <span class="k">in</span> <span class="n">a</span>
</span><span class='line'>  <span class="nb">puts</span> <span class="n">i</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'><span class="c1"># 0</span>
</span><span class='line'><span class="c1"># 1</span>
</span><span class='line'><span class="c1"># 2</span>
</span></code></pre></td></tr></table></div></figure>


<p>If not, it&rsquo;s great too</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">for</span> <span class="n">i</span> <span class="k">in</span> <span class="mi">0</span><span class="o">.</span><span class="n">.</span><span class="mi">2</span>
</span><span class='line'>  <span class="nb">puts</span> <span class="n">i</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'><span class="c1"># 0</span>
</span><span class='line'><span class="c1"># 1</span>
</span><span class='line'><span class="c1"># 2</span>
</span><span class='line'>
</span><span class='line'><span class="p">(</span><span class="mi">0</span><span class="o">.</span><span class="n">.</span><span class="mi">2</span><span class="p">)</span><span class="o">.</span><span class="n">each</span> <span class="k">do</span> <span class="o">|</span><span class="n">i</span><span class="o">|</span>
</span><span class='line'>  <span class="nb">puts</span> <span class="n">i</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'><span class="c1"># 0</span>
</span><span class='line'><span class="c1"># 1</span>
</span><span class='line'><span class="c1"># 2</span>
</span></code></pre></td></tr></table></div></figure>


<p>There&rsquo;s also 4 keywords to help you manage the control of flow <code>break</code>, <code>next</code>, <code>redo</code> and finally <code>retry</code> which I&rsquo;ll bring up in the Error Handling section. <code>break</code> exits the inner most loop</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">for</span> <span class="n">i</span> <span class="k">in</span> <span class="mi">0</span><span class="o">.</span><span class="n">.</span><span class="mi">2</span>
</span><span class='line'>  <span class="nb">puts</span> <span class="n">i</span>
</span><span class='line'>  <span class="k">if</span> <span class="n">i</span> <span class="o">==</span> <span class="mi">1</span>
</span><span class='line'>    <span class="k">break</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'><span class="c1"># 0</span>
</span><span class='line'><span class="c1"># 1</span>
</span></code></pre></td></tr></table></div></figure>


<p>While <code>next</code> jumps to the next iteration of the loop</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">for</span> <span class="n">i</span> <span class="k">in</span> <span class="mi">0</span><span class="o">.</span><span class="n">.</span><span class="mi">2</span>
</span><span class='line'>  <span class="k">if</span> <span class="n">i</span> <span class="o">==</span> <span class="mi">1</span>
</span><span class='line'>    <span class="k">next</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>  <span class="nb">puts</span> <span class="n">i</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'><span class="c1"># 0</span>
</span><span class='line'><span class="c1"># 2</span>
</span><span class='line'>
</span><span class='line'><span class="k">for</span> <span class="n">i</span> <span class="k">in</span> <span class="mi">0</span><span class="o">.</span><span class="n">.</span><span class="mi">2</span>
</span><span class='line'>  <span class="k">if</span> <span class="n">i</span> <span class="o">==</span> <span class="mi">2</span>
</span><span class='line'>    <span class="k">next</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>  <span class="nb">puts</span> <span class="n">i</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'><span class="c1"># 0</span>
</span><span class='line'><span class="c1"># 1</span>
</span></code></pre></td></tr></table></div></figure>


<p>And <code>redo</code> jumps back to the beginning of the current iteration in this loop</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">j</span> <span class="o">=</span> <span class="mi">0</span>
</span><span class='line'><span class="k">for</span> <span class="n">i</span> <span class="k">in</span> <span class="mi">0</span><span class="o">.</span><span class="n">.</span><span class="mi">2</span>
</span><span class='line'>  <span class="nb">puts</span> <span class="s2">&quot;i is </span><span class="si">#{</span><span class="n">i</span><span class="si">}</span><span class="s2">&quot;</span>
</span><span class='line'>  <span class="nb">puts</span> <span class="s2">&quot;j is </span><span class="si">#{</span><span class="n">j</span><span class="si">}</span><span class="s2">&quot;</span>
</span><span class='line'>  <span class="n">j</span> <span class="o">+=</span> <span class="mi">1</span>
</span><span class='line'>  <span class="k">if</span> <span class="n">j</span> <span class="o">&gt;</span> <span class="mi">2</span>
</span><span class='line'>    <span class="k">break</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>  <span class="k">if</span> <span class="n">i</span> <span class="o">==</span> <span class="mi">1</span>
</span><span class='line'>    <span class="k">redo</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'><span class="c1"># i is 0</span>
</span><span class='line'><span class="c1"># j is 0</span>
</span><span class='line'><span class="c1"># i is 1</span>
</span><span class='line'><span class="c1"># j is 1</span>
</span><span class='line'><span class="c1"># i is 1</span>
</span><span class='line'><span class="c1"># j is 2</span>
</span></code></pre></td></tr></table></div></figure>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Arrays]]></title>
    <link href="http://nizhu.github.io/ruby-intro-site/blog/2013/07/28/arrays/"/>
    <updated>2013-07-28T20:21:00+10:00</updated>
    <id>http://nizhu.github.io/ruby-intro-site/blog/2013/07/28/arrays</id>
    <content type="html"><![CDATA[<p>Arrays in Ruby are very similar to those in other dynamic programming languages. It&rsquo;s all very standard and the documentation has loads of examples anyway, so I&rsquo;ll go through only the most basic and obvious to get started.</p>

<h3>Construction</h3>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="o">[</span><span class="mi">1</span><span class="p">,</span> <span class="s2">&quot;foo&quot;</span><span class="p">,</span> <span class="kp">nil</span><span class="p">,</span> <span class="s2">&quot;bar&quot;</span><span class="o">]</span>
</span><span class='line'><span class="c1"># [1, &quot;foo&quot;, nil, &quot;bar&quot;]</span>
</span><span class='line'>
</span><span class='line'><span class="nb">Array</span><span class="o">.</span><span class="n">new</span>
</span><span class='line'><span class="c1"># []</span>
</span><span class='line'><span class="nb">Array</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="mi">3</span><span class="p">,</span> <span class="kp">true</span><span class="p">)</span>
</span><span class='line'><span class="c1"># [true, true, true]</span>
</span><span class='line'>
</span><span class='line'><span class="p">(</span><span class="mi">1</span><span class="o">.</span><span class="n">.</span><span class="mi">10</span><span class="p">)</span><span class="o">.</span><span class="n">to_a</span>
</span><span class='line'><span class="c1"># [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]</span>
</span><span class='line'><span class="p">(</span><span class="s2">&quot;a7&quot;</span><span class="o">.</span><span class="n">.</span><span class="s2">&quot;b5&quot;</span><span class="p">)</span><span class="o">.</span><span class="n">to_a</span>
</span><span class='line'><span class="c1"># [&quot;a7&quot;, &quot;a8&quot;, &quot;a9&quot;, &quot;b0&quot;, &quot;b1&quot;, &quot;b2&quot;, &quot;b3&quot;, &quot;b4&quot;, &quot;b5&quot;]</span>
</span></code></pre></td></tr></table></div></figure>


<h3>Accessing elements and array info</h3>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">arr</span> <span class="o">=</span> <span class="o">[</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="mi">5</span><span class="p">,</span> <span class="mi">6</span><span class="o">]</span>
</span><span class='line'><span class="n">arr</span><span class="o">[</span><span class="mi">2</span><span class="o">]</span>
</span><span class='line'><span class="c1"># 3</span>
</span><span class='line'><span class="n">arr</span><span class="o">[</span><span class="mi">100</span><span class="o">]</span>
</span><span class='line'><span class="c1"># nil</span>
</span><span class='line'><span class="n">arr</span><span class="o">[-</span><span class="mi">3</span><span class="o">]</span>
</span><span class='line'><span class="c1"># 4</span>
</span><span class='line'><span class="n">arr</span><span class="o">[</span><span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="o">]</span>
</span><span class='line'><span class="c1"># [3, 4, 5]</span>
</span><span class='line'><span class="n">arr</span><span class="o">[</span><span class="mi">1</span><span class="o">.</span><span class="n">.</span><span class="mi">4</span><span class="o">]</span>
</span><span class='line'><span class="c1"># [2, 3, 4, 5]</span>
</span><span class='line'><span class="n">arr</span><span class="o">.</span><span class="n">at</span><span class="p">(</span><span class="mi">0</span><span class="p">)</span>
</span><span class='line'><span class="c1"># 1</span>
</span><span class='line'>
</span><span class='line'><span class="n">arr</span><span class="o">.</span><span class="n">length</span>
</span><span class='line'><span class="c1"># 6</span>
</span><span class='line'><span class="n">arr</span><span class="o">.</span><span class="n">empty?</span>
</span><span class='line'><span class="c1"># false</span>
</span><span class='line'><span class="n">arr</span><span class="o">.</span><span class="n">include?</span><span class="p">(</span><span class="mi">7</span><span class="p">)</span>
</span><span class='line'><span class="c1"># false</span>
</span></code></pre></td></tr></table></div></figure>


<h3>Adding to the array</h3>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">arr</span><span class="o">.</span><span class="n">push</span><span class="p">(</span><span class="mi">7</span><span class="p">)</span>
</span><span class='line'><span class="c1"># [1, 2, 3, 4, 5, 6, 7]</span>
</span><span class='line'><span class="n">arr</span> <span class="o">&lt;&lt;</span> <span class="mi">8</span>
</span><span class='line'><span class="c1"># [1, 2, 3, 4, 5, 6, 7, 8]</span>
</span><span class='line'>
</span><span class='line'><span class="n">arr</span><span class="o">.</span><span class="n">unshift</span><span class="p">(</span><span class="mi">0</span><span class="p">)</span>
</span><span class='line'><span class="c1"># [0, 1, 2, 3, 4, 5, 6, 7]</span>
</span><span class='line'>
</span><span class='line'><span class="n">arr</span><span class="o">.</span><span class="n">insert</span><span class="p">(</span><span class="mi">3</span><span class="p">,</span> <span class="mi">2</span><span class="o">.</span><span class="mi">5</span><span class="p">)</span>
</span><span class='line'><span class="c1"># [0, 1, 2, 2.5, 3, 4, 5, 6, 7]</span>
</span></code></pre></td></tr></table></div></figure>


<h3>Removing from Array</h3>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">arr</span>
</span><span class='line'><span class="c1"># [0, 1, 2, 2.5, 3, 4, 5, 6, 7]</span>
</span><span class='line'>
</span><span class='line'><span class="n">arr</span><span class="o">.</span><span class="n">pop</span>
</span><span class='line'><span class="c1"># 7</span>
</span><span class='line'><span class="c1"># arr = [0, 1, 2, 2.5, 3, 4, 5, 6]</span>
</span><span class='line'>
</span><span class='line'><span class="n">arr</span><span class="o">.</span><span class="n">shift</span>
</span><span class='line'><span class="c1"># 0</span>
</span><span class='line'><span class="c1"># arr = [1, 2, 2.5, 3, 4, 5, 6]</span>
</span><span class='line'>
</span><span class='line'><span class="n">arr</span><span class="o">.</span><span class="n">delete</span><span class="p">(</span><span class="mi">3</span><span class="p">)</span>
</span><span class='line'><span class="c1"># 2.5</span>
</span><span class='line'><span class="c1"># arr = [1, 2. 3, 4, 5, 6]</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Print vs Puts</h2>

<p>Both these functions can be used to output text. To put it simply, puts adds a newline character to the end of each argument and outputs nil as an invisible character rather than a String. Refer to the link at the bottom for more discussion.</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="nb">print</span> <span class="o">[</span><span class="kp">nil</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="o">]</span>
</span><span class='line'><span class="c1"># [nil, 1, 2]=&gt; nil</span>
</span><span class='line'>
</span><span class='line'><span class="nb">puts</span> <span class="o">[</span><span class="kp">nil</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="o">]</span>
</span><span class='line'><span class="c1"># </span>
</span><span class='line'><span class="c1"># 1</span>
</span><span class='line'><span class="c1"># 2</span>
</span></code></pre></td></tr></table></div></figure>


<ol>
<li><a href="http://ruby-doc.org/core-2.0/Array.html">Ruby-Docs Array</a></li>
<li><a href="http://stackoverflow.com/questions/5018633/what-is-the-difference-between-print-and-puts">Stack Overflow &ndash; What is the difference between print and puts</a></li>
</ol>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Truthiness &amp; Control Flow]]></title>
    <link href="http://nizhu.github.io/ruby-intro-site/blog/2013/07/28/truthiness-and-control-flow/"/>
    <updated>2013-07-28T15:25:00+10:00</updated>
    <id>http://nizhu.github.io/ruby-intro-site/blog/2013/07/28/truthiness-and-control-flow</id>
    <content type="html"><![CDATA[<p>Ruby uses keywords true and false to represent truthiness and nil to represent a reference that points to nothing (usually some variation of null in other languages).</p>

<p>Like Fixnum from the previous post, these 3 keywords are immediate values.</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="kp">true</span><span class="o">.</span><span class="n">object_id</span>
</span><span class='line'><span class="c1"># 20</span>
</span><span class='line'><span class="kp">true</span><span class="o">.</span><span class="n">object_id</span>
</span><span class='line'><span class="c1"># 20</span>
</span><span class='line'>
</span><span class='line'><span class="kp">false</span><span class="o">.</span><span class="n">object_id</span>
</span><span class='line'><span class="c1"># 0</span>
</span><span class='line'><span class="kp">false</span><span class="o">.</span><span class="n">object_id</span>
</span><span class='line'><span class="c1"># 0</span>
</span><span class='line'>
</span><span class='line'><span class="kp">nil</span><span class="o">.</span><span class="n">object_id</span>
</span><span class='line'><span class="c1"># 8</span>
</span><span class='line'><span class="kp">nil</span><span class="o">.</span><span class="n">object_id</span>
</span><span class='line'><span class="c1"># 8</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Equality Testing</h2>

<p>There are 4 ways of testing for equality in Ruby. You&rsquo;ll be using one of them a majority of the time&hellip; <code>==</code>. Generally <code>==</code> represents equality of the values within the object while <code>.equal?</code> ensures that the 2 objects are one and the same (reference pointer comparison). However, as always, make sure you test your code thoroughly since these are just methods that are easy to override (more on this later). The other two are more obscure and depends much more on the implementation.</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="s2">&quot;abc&quot;</span> <span class="o">==</span> <span class="s2">&quot;abc&quot;</span>
</span><span class='line'><span class="c1"># true</span>
</span><span class='line'><span class="s2">&quot;abc&quot;</span><span class="o">.</span><span class="n">equal?</span> <span class="s2">&quot;abc&quot;</span>
</span><span class='line'><span class="c1"># false</span>
</span><span class='line'>
</span><span class='line'><span class="mi">1</span> <span class="o">==</span> <span class="mi">1</span>
</span><span class='line'><span class="c1"># true</span>
</span><span class='line'><span class="mi">1</span><span class="o">.</span><span class="n">equal?</span> <span class="mi">1</span>
</span><span class='line'><span class="c1"># true</span>
</span><span class='line'><span class="mi">1</span><span class="o">.</span><span class="n">eql?</span> <span class="mi">1</span>
</span><span class='line'><span class="c1"># true</span>
</span><span class='line'>
</span><span class='line'><span class="mi">1</span><span class="o">.</span><span class="mi">0</span> <span class="o">==</span> <span class="mi">1</span>
</span><span class='line'><span class="c1"># true</span>
</span><span class='line'><span class="mi">1</span><span class="o">.</span><span class="mi">0</span><span class="o">.</span><span class="n">equal?</span> <span class="mi">1</span>
</span><span class='line'><span class="c1"># false</span>
</span><span class='line'><span class="mi">1</span><span class="o">.</span><span class="mi">0</span><span class="o">.</span><span class="n">eql?</span> <span class="mi">1</span>
</span><span class='line'><span class="c1"># false</span>
</span></code></pre></td></tr></table></div></figure>


<h1>Control Flow</h1>

<p>As mentioned in the first post, Ruby was designed to be readable and flexible. I think control flow statements are the highlight. Further, it&rsquo;s important to always remember that false and nil are the only objects that can be &lsquo;untruthy&rsquo; (including 0).</p>

<p>Firstly, we have the very standard if-then-else statements.</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">t</span> <span class="o">=</span> <span class="kp">true</span>
</span><span class='line'>
</span><span class='line'><span class="k">if</span> <span class="n">t</span>
</span><span class='line'>  <span class="nb">puts</span> <span class="s2">&quot;t is true&quot;</span>
</span><span class='line'><span class="k">else</span>
</span><span class='line'>  <span class="nb">puts</span> <span class="s2">&quot;t is false&quot;</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># t is true</span>
</span><span class='line'>
</span><span class='line'><span class="n">num</span> <span class="o">=</span> <span class="mi">0</span>
</span><span class='line'>
</span><span class='line'><span class="k">if</span> <span class="n">num</span> <span class="o">&lt;</span> <span class="mi">0</span>
</span><span class='line'>  <span class="nb">puts</span> <span class="s2">&quot;num is negative&quot;</span>
</span><span class='line'><span class="k">elsif</span> <span class="n">num</span> <span class="o">==</span> <span class="mi">0</span>
</span><span class='line'>  <span class="nb">puts</span> <span class="s2">&quot;num is zero&quot;</span>
</span><span class='line'><span class="k">else</span>
</span><span class='line'>  <span class="nb">puts</span> <span class="s2">&quot;num is positive&quot;</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># num is zero</span>
</span></code></pre></td></tr></table></div></figure>


<p>Then we have unless, which literally means if not. However, please avoid this if you need to use else (there is no secondary guard like elsif or elsunless) &ndash; it&rsquo;s only useful in causing confusion.</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">t</span> <span class="o">=</span> <span class="kp">true</span>
</span><span class='line'>
</span><span class='line'><span class="k">unless</span> <span class="n">t</span>
</span><span class='line'>  <span class="nb">puts</span> <span class="s2">&quot;t is false&quot;</span>
</span><span class='line'><span class="k">else</span>
</span><span class='line'>  <span class="nb">puts</span> <span class="s2">&quot;t is true&quot;</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># t is true</span>
</span></code></pre></td></tr></table></div></figure>


<p>A popular way of writing terse simple control flow without sacrificing on readability is to suffix the control to the line itself</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="nb">puts</span> <span class="s2">&quot;true&quot;</span> <span class="k">if</span> <span class="kp">true</span>
</span><span class='line'><span class="c1"># true</span>
</span><span class='line'><span class="c1"># =&gt; nil</span>
</span><span class='line'>
</span><span class='line'><span class="nb">puts</span> <span class="s2">&quot;false&quot;</span> <span class="k">unless</span> <span class="kp">true</span>
</span><span class='line'><span class="c1"># =&gt; nil</span>
</span></code></pre></td></tr></table></div></figure>


<p>Finally, we have the C-style single line statements</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="kp">true</span> <span class="p">?</span> <span class="kp">true</span> <span class="p">:</span> <span class="kp">false</span>
</span><span class='line'><span class="c1"># true</span>
</span><span class='line'>
</span><span class='line'><span class="kp">false</span> <span class="p">?</span> <span class="kp">true</span> <span class="p">:</span> <span class="kp">false</span>
</span><span class='line'><span class="c1"># false</span>
</span></code></pre></td></tr></table></div></figure>


<p>And many more complex variations of them. They&rsquo;re just another way of formatting the first option since they Ruby treats <code>;</code> as a new line. Please never write code like this :)</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">if</span> <span class="kp">true</span> <span class="k">then</span> <span class="kp">true</span> <span class="k">else</span> <span class="kp">false</span> <span class="k">end</span>
</span><span class='line'><span class="c1"># true</span>
</span><span class='line'>
</span><span class='line'><span class="k">if</span> <span class="kp">true</span><span class="p">;</span> <span class="kp">true</span> <span class="k">else</span> <span class="kp">false</span> <span class="k">end</span>
</span><span class='line'><span class="c1"># true</span>
</span><span class='line'>
</span><span class='line'><span class="n">num</span> <span class="o">=</span> <span class="mi">0</span>
</span><span class='line'><span class="k">if</span> <span class="n">num</span> <span class="o">&lt;</span> <span class="mi">0</span><span class="p">;</span> <span class="nb">puts</span> <span class="s2">&quot;negative&quot;</span><span class="p">;</span> <span class="nb">puts</span> <span class="s2">&quot;lalala&quot;</span> <span class="k">elsif</span> <span class="n">num</span> <span class="o">&gt;</span> <span class="mi">0</span><span class="p">;</span> <span class="nb">puts</span> <span class="s2">&quot;positive&quot;</span> <span class="k">else</span> <span class="nb">puts</span> <span class="s2">&quot;zero&quot;</span> <span class="k">end</span>
</span><span class='line'><span class="c1"># zero</span>
</span><span class='line'>
</span><span class='line'><span class="n">num</span> <span class="o">=</span> <span class="o">-</span><span class="mi">1</span>
</span><span class='line'><span class="k">if</span> <span class="n">num</span> <span class="o">&lt;</span> <span class="mi">0</span><span class="p">;</span> <span class="nb">puts</span> <span class="s2">&quot;negative&quot;</span><span class="p">;</span> <span class="nb">puts</span> <span class="s2">&quot;lalala&quot;</span> <span class="k">elsif</span> <span class="n">num</span> <span class="o">&gt;</span> <span class="mi">0</span><span class="p">;</span> <span class="nb">puts</span> <span class="s2">&quot;positive&quot;</span> <span class="k">else</span> <span class="nb">puts</span> <span class="s2">&quot;zero&quot;</span> <span class="k">end</span>
</span><span class='line'><span class="c1"># negative</span>
</span><span class='line'><span class="c1"># lalala</span>
</span><span class='line'>
</span><span class='line'><span class="n">num</span> <span class="o">=</span> <span class="mi">1</span>
</span><span class='line'><span class="k">if</span> <span class="n">num</span> <span class="o">&lt;</span> <span class="mi">0</span><span class="p">;</span> <span class="nb">puts</span> <span class="s2">&quot;negative&quot;</span><span class="p">;</span> <span class="nb">puts</span> <span class="s2">&quot;lalala&quot;</span> <span class="k">elsif</span> <span class="n">num</span> <span class="o">&gt;</span> <span class="mi">0</span><span class="p">;</span> <span class="nb">puts</span> <span class="s2">&quot;positive&quot;</span> <span class="k">else</span> <span class="nb">puts</span> <span class="s2">&quot;zero&quot;</span> <span class="k">end</span>
</span><span class='line'><span class="c1"># positive</span>
</span></code></pre></td></tr></table></div></figure>


<ol>
<li><a href="http://stackoverflow.com/questions/7156955/whats-the-difference-between-equal-eql-and/7157051#7157051">Stack Overflow &ndash; What&rsquo;s the difference between equal?, eql?, ===, and ==?</a></li>
</ol>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Numbers]]></title>
    <link href="http://nizhu.github.io/ruby-intro-site/blog/2013/07/28/numbers/"/>
    <updated>2013-07-28T14:48:00+10:00</updated>
    <id>http://nizhu.github.io/ruby-intro-site/blog/2013/07/28/numbers</id>
    <content type="html"><![CDATA[<p>Like most (if not all) object oriented programming languages out there, Ruby has an Integer class and a Float class. Less common in standard libraries however, are the classes Rational and Complex which are used to represent fractions and complex numbers respectively.</p>

<h1>Integers</h1>

<p>In terms of functionality, there&rsquo;s little interesting with Integers. There&rsquo;s obviously adding, subtracting, multiplication, division, modulo and exponentials.</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="mi">1</span> <span class="o">+</span> <span class="mi">2</span>
</span><span class='line'><span class="c1"># 3</span>
</span><span class='line'><span class="mi">1</span> <span class="o">-</span> <span class="mi">2</span>
</span><span class='line'><span class="c1"># -1 </span>
</span><span class='line'><span class="mi">1</span> <span class="o">*</span> <span class="mi">2</span>
</span><span class='line'><span class="c1"># 2</span>
</span><span class='line'><span class="mi">2</span> <span class="o">/</span> <span class="mi">1</span>
</span><span class='line'><span class="c1"># 2</span>
</span><span class='line'><span class="mi">5</span> <span class="o">%</span> <span class="mi">2</span>
</span><span class='line'><span class="c1"># 1</span>
</span><span class='line'><span class="mi">2</span> <span class="o">**</span> <span class="mi">2</span>
</span><span class='line'><span class="c1"># 4</span>
</span></code></pre></td></tr></table></div></figure>


<p>There are also several methods for common operations</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="mi">1</span><span class="o">.</span><span class="n">next</span>
</span><span class='line'><span class="c1"># 2</span>
</span><span class='line'><span class="mi">1</span><span class="o">.</span><span class="n">even?</span>
</span><span class='line'><span class="c1"># false</span>
</span><span class='line'><span class="mi">10</span><span class="o">.</span><span class="n">gcd</span><span class="p">(</span><span class="mi">2</span><span class="p">)</span>
</span><span class='line'><span class="c1"># 2</span>
</span><span class='line'><span class="s2">&quot;10&quot;</span><span class="o">.</span><span class="n">to_i</span>
</span><span class='line'><span class="c1"># 10</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Fixnum vs Bignum</h2>

<p>To make an analogy to Java and C, this is the comparison between int and long. In Ruby however, integers are not actually of the class Integer.</p>

<p>What we think of Integer is the Fixnum. It&rsquo;s used for all integers that would fit in a machine&rsquo;s &lsquo;word&rsquo;, otherwise it&rsquo;s a Bignum. Both these types inherit from the Integer class.</p>

<p>On this 64bit Mac, a word is 8 bytes. The class uses 1 bit mark the number as positive or negative, and another to mark the integer as value as opposed to a pointer (this is why object_id for Fixnum are always odd). As such, the maximum value for a Fixnum is 4611686018427387903 (2<sup>62</sup>-1) and the minimum is -4611686018427387904 (-2<sup>62</sup>). If an Fixnum leaves this range, Ruby automatically converts it to a Bignum and vice versa.</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="no">FIXNUM_MAX</span> <span class="o">=</span> <span class="p">(</span><span class="mi">2</span><span class="o">**</span><span class="p">(</span><span class="mi">0</span><span class="o">.</span><span class="n">size</span> <span class="o">*</span> <span class="mi">8</span> <span class="o">-</span><span class="mi">2</span><span class="p">)</span> <span class="o">-</span><span class="mi">1</span><span class="p">)</span>
</span><span class='line'><span class="c1"># 4611686018427387903</span>
</span><span class='line'><span class="no">FIXNUM_MIN</span> <span class="o">=</span> <span class="o">-</span><span class="p">(</span><span class="mi">2</span><span class="o">**</span><span class="p">(</span><span class="mi">0</span><span class="o">.</span><span class="n">size</span> <span class="o">*</span> <span class="mi">8</span> <span class="o">-</span><span class="mi">2</span><span class="p">))</span>
</span><span class='line'><span class="c1"># -4611686018427387904</span>
</span><span class='line'><span class="no">FIXNUM_MAX</span><span class="o">.</span><span class="n">class</span>
</span><span class='line'><span class="c1"># Fixnum</span>
</span><span class='line'><span class="n">bignum</span> <span class="o">=</span> <span class="no">FIXNUM_MAX</span> <span class="o">+</span> <span class="mi">1</span>
</span><span class='line'><span class="n">bignum</span><span class="o">.</span><span class="n">class</span>
</span><span class='line'><span class="c1"># Bignum</span>
</span><span class='line'><span class="p">(</span><span class="n">bignum</span><span class="o">-</span><span class="mi">1</span><span class="p">)</span><span class="o">.</span><span class="n">class</span>
</span><span class='line'><span class="c1"># Fixnum</span>
</span></code></pre></td></tr></table></div></figure>


<p>The biggest difference between these classes is that, like Java ints, Fixnum objects are immediate value. They are not references to another object. Remember in the last post when repeating <code>"xyzxyz".object_id</code> would return a different number everytime? This won&rsquo;t be the case for Fixnum. In fact, object_id of Fixnum are predictable. For positive numbers, the id is simply 2 * value + 1. Similarly, 2 * value &ndash; 1 for negative numbers.</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="mi">4611686018427387903</span><span class="o">.</span><span class="n">object_id</span>
</span><span class='line'><span class="c1"># 9223372036854775807</span>
</span><span class='line'><span class="mi">4611686018427387903</span><span class="o">.</span><span class="n">object_id</span>
</span><span class='line'><span class="c1"># 9223372036854775807</span>
</span><span class='line'>
</span><span class='line'><span class="o">-</span><span class="mi">4611686018427387904</span><span class="o">.</span><span class="n">object_id</span>
</span><span class='line'><span class="c1"># -9223372036854775807</span>
</span></code></pre></td></tr></table></div></figure>


<h1>Rationals</h1>

<p>Rationals are useful for calculations because they come with the accuracy that&rsquo;s missing from floats. There are 3 ways to create them</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="no">Rational</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">)</span>
</span><span class='line'><span class="c1"># (1/2)</span>
</span><span class='line'><span class="s2">&quot;1/2&quot;</span><span class="o">.</span><span class="n">to_r</span>
</span><span class='line'><span class="c1"># (1/2)</span>
</span><span class='line'><span class="mi">0</span><span class="o">.</span><span class="mi">5</span><span class="o">.</span><span class="n">rationalize</span>
</span><span class='line'><span class="c1"># (1/2)</span>
</span><span class='line'>
</span><span class='line'><span class="no">Rational</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span><span class="mi">2</span><span class="p">)</span> <span class="o">+</span> <span class="no">Rational</span><span class="p">(</span><span class="mi">2</span><span class="p">,</span><span class="mi">3</span><span class="p">)</span>
</span><span class='line'><span class="c1"># (7/6)</span>
</span><span class='line'><span class="no">Rational</span><span class="p">(</span><span class="mi">7</span><span class="p">,</span><span class="mi">6</span><span class="p">)</span><span class="o">.</span><span class="n">to_f</span>
</span><span class='line'><span class="c1"># 1.1666666666666667</span>
</span></code></pre></td></tr></table></div></figure>


<h1>Float</h1>

<p>Like integers, Float&rsquo;s methods are quite standard.</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="mi">1</span><span class="o">.</span><span class="mi">2345</span><span class="o">.</span><span class="n">to_i</span>
</span><span class='line'><span class="c1"># 1</span>
</span><span class='line'><span class="mi">1</span><span class="o">.</span><span class="mi">2345</span><span class="o">.</span><span class="n">floor</span>
</span><span class='line'><span class="c1"># 1</span>
</span><span class='line'><span class="mi">9</span><span class="o">.</span><span class="mi">87654321</span><span class="o">.</span><span class="n">round</span><span class="p">(</span><span class="mi">3</span><span class="p">)</span>
</span><span class='line'><span class="c1"># 9.877</span>
</span><span class='line'><span class="p">(</span><span class="mi">0</span><span class="o">.</span><span class="mi">0</span><span class="p">)</span><span class="o">.</span><span class="n">infinite?</span>
</span><span class='line'><span class="c1"># nil</span>
</span><span class='line'><span class="p">(</span><span class="o">-</span><span class="mi">1</span><span class="o">.</span><span class="mi">0</span><span class="o">/</span><span class="mi">0</span><span class="o">.</span><span class="mi">0</span><span class="p">)</span><span class="o">.</span><span class="n">infinite?</span>
</span><span class='line'><span class="c1"># -1</span>
</span><span class='line'><span class="p">(</span><span class="o">+</span><span class="mi">1</span><span class="o">.</span><span class="mi">0</span><span class="o">/</span><span class="mi">0</span><span class="o">.</span><span class="mi">0</span><span class="p">)</span><span class="o">.</span><span class="n">infinite?</span>
</span><span class='line'><span class="c1"># 1</span>
</span><span class='line'><span class="mi">0</span><span class="o">.</span><span class="mi">3</span><span class="o">.</span><span class="n">rationalize</span>
</span><span class='line'><span class="c1"># (3/10)</span>
</span></code></pre></td></tr></table></div></figure>


<p>However, it&rsquo;s important to note that floating point calculations are inaccurate, like almost every programming langauge (can&rsquo;t name any with).</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="mi">0</span><span class="o">.</span><span class="mi">3</span><span class="o">.</span><span class="n">to_r</span>
</span><span class='line'><span class="c1"># (5404319552844595/18014398509481984)</span>
</span><span class='line'><span class="nb">printf</span><span class="p">(</span><span class="s2">&quot;%.55f</span><span class="se">\n</span><span class="s2">&quot;</span><span class="p">,</span> <span class="mi">1</span><span class="o">.</span><span class="mi">9</span><span class="p">)</span>
</span><span class='line'><span class="mi">1</span><span class="o">.</span><span class="mi">8999999999999999111821580299874767661094665527343750000</span>
</span></code></pre></td></tr></table></div></figure>


<ol>
<li><a href="http://www.ruby-doc.org/core-2.0/Integer.html">Ruby-Docs Integer</a></li>
<li><a href="http://www.ruby-doc.org/core-2.0/Fixnum.html">Ruby-Docs Fixnum</a></li>
<li><a href="http://www.ruby-doc.org/core-2.0/Bignum.html">Ruby-Dics Bignum</a></li>
<li><a href="http://www.ruby-doc.org/core-2.0/Float.html">Ruby-Docs Float</a></li>
<li><a href="http://www.ruby-doc.org/core-2.0/Rational.html">Ruby-Docs Rationals</a></li>
<li><a href="http://www.ruby-doc.org/core-2.0/Complex.html">Ruby-Docs Complex</a></li>
<li><a href="http://stackoverflow.com/questions/535721/ruby-max-integer">Stack Overflow Ruby max integer</a></li>
</ol>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Strings]]></title>
    <link href="http://nizhu.github.io/ruby-intro-site/blog/2013/07/27/strings/"/>
    <updated>2013-07-27T17:34:00+10:00</updated>
    <id>http://nizhu.github.io/ruby-intro-site/blog/2013/07/27/strings</id>
    <content type="html"><![CDATA[<p>There isn&rsquo;t much special about Ruby strings. Try the code snippets below in irb.</p>

<h2>Construction</h2>

<p>Strings can be created either using literals, or the new function.</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">a</span> <span class="o">=</span> <span class="s2">&quot;abcde&quot;</span>
</span><span class='line'><span class="nb">puts</span> <span class="n">a</span>
</span><span class='line'><span class="c1"># abcde</span>
</span><span class='line'><span class="c1"># =&gt; nil</span>
</span><span class='line'>
</span><span class='line'><span class="n">b</span> <span class="o">=</span> <span class="nb">String</span><span class="o">.</span><span class="n">new</span> <span class="s2">&quot;fghij&quot;</span>
</span><span class='line'><span class="nb">puts</span> <span class="n">b</span>
</span><span class='line'><span class="c1"># fghij</span>
</span><span class='line'><span class="c1"># =&gt; nil</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Instance Functions</h2>

<p>Like <code>java.lang.String</code>, there are loads of predefined methods for the class. Remeber to refer to the Class documentation; there are code samples in there too. I&rsquo;m just going to give you a taste of what&rsquo;s available.</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">a</span><span class="o">.</span><span class="n">length</span>
</span><span class='line'><span class="c1"># 1</span>
</span><span class='line'><span class="n">a</span><span class="o">.</span><span class="n">next</span>
</span><span class='line'><span class="c1"># abcdf</span>
</span><span class='line'><span class="n">a</span><span class="o">.</span><span class="n">reverse</span>
</span><span class='line'><span class="c1"># edcba</span>
</span><span class='line'><span class="n">a</span><span class="o">.</span><span class="n">upcase</span>
</span><span class='line'><span class="c1"># ABCDE</span>
</span><span class='line'><span class="n">a</span><span class="o">.</span><span class="n">slice</span><span class="p">(</span><span class="mi">3</span><span class="p">,</span> <span class="mi">5</span><span class="p">)</span>
</span><span class='line'><span class="c1"># de</span>
</span></code></pre></td></tr></table></div></figure>


<p>You&rsquo;ll notice that the methods above only returns the result of the function. Some methods makes changes to the string in place.</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">c</span> <span class="o">=</span> <span class="s2">&quot;ababab&quot;</span>
</span><span class='line'><span class="n">c</span><span class="o">.</span><span class="n">reverse!</span>
</span><span class='line'><span class="nb">puts</span> <span class="n">c</span>
</span><span class='line'><span class="c1"># bababa</span>
</span><span class='line'>
</span><span class='line'><span class="n">c</span><span class="o">.</span><span class="n">upcase!</span>
</span><span class='line'><span class="nb">puts</span> <span class="n">c</span>
</span><span class='line'><span class="c1"># BABABA</span>
</span></code></pre></td></tr></table></div></figure>


<p>Like Perl, Strings in Ruby are mutable. The object_id method I&rsquo;m using below returns the id of the object, similar to the &amp; operator in C. Strings inherit this from the Object class. Note that String objects are created every time a String literal is used.</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="s2">&quot;xyzxyz&quot;</span><span class="o">.</span><span class="n">object_id</span>
</span><span class='line'><span class="c1"># 70243133245180</span>
</span><span class='line'><span class="s2">&quot;xyzxyz&quot;</span><span class="o">.</span><span class="n">object_id</span>
</span><span class='line'><span class="c1"># 70243133228560</span>
</span><span class='line'>
</span><span class='line'><span class="n">d</span> <span class="o">=</span> <span class="s2">&quot;xyzxyz&quot;</span>
</span><span class='line'><span class="n">d</span><span class="o">.</span><span class="n">object_id</span>
</span><span class='line'><span class="c1"># 70243133212180</span>
</span><span class='line'><span class="n">d</span><span class="o">.</span><span class="n">reverse!</span>
</span><span class='line'><span class="c1"># &quot;zyxzyx&quot;</span>
</span><span class='line'><span class="n">d</span><span class="o">.</span><span class="n">object_id</span>
</span><span class='line'><span class="c1"># 70243133212180</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Building a String</h2>

<p>Strings can be built from variables in 4 different ways. The first two is probably the most commonly used</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">e</span> <span class="o">=</span> <span class="s2">&quot;abc&quot;</span>
</span><span class='line'><span class="n">f</span> <span class="o">=</span> <span class="s2">&quot;def&quot;</span>
</span><span class='line'><span class="n">g</span> <span class="o">=</span> <span class="mi">10</span>
</span><span class='line'><span class="n">h</span> <span class="o">=</span> <span class="n">e</span> <span class="o">+</span> <span class="s2">&quot; + &quot;</span> <span class="o">+</span> <span class="n">f</span> <span class="o">+</span> <span class="s2">&quot; is not equal to &quot;</span> <span class="o">+</span> <span class="n">g</span><span class="o">.</span><span class="n">to_s</span>
</span><span class='line'><span class="n">i</span> <span class="o">=</span> <span class="s2">&quot;</span><span class="si">#{</span><span class="n">e</span><span class="si">}</span><span class="s2"> + </span><span class="si">#{</span><span class="n">f</span><span class="si">}</span><span class="s2"> is not equal to </span><span class="si">#{</span><span class="n">g</span><span class="si">}</span><span class="s2">&quot;</span>
</span><span class='line'><span class="nb">puts</span> <span class="n">h</span>
</span><span class='line'><span class="nb">puts</span> <span class="n">i</span>
</span><span class='line'><span class="c1"># abc + def is not equal to 10</span>
</span></code></pre></td></tr></table></div></figure>


<p>The third way is appending to strings. It&rsquo;s more efficient in that it simply adds to a string instead of creating a new one, but it does change the string that is being appended to.</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">j</span> <span class="o">=</span> <span class="n">e</span> <span class="o">&lt;&lt;</span> <span class="s2">&quot; + &quot;</span> <span class="o">&lt;&lt;</span> <span class="n">f</span> <span class="o">&lt;&lt;</span> <span class="s2">&quot; is not equal to &quot;</span> <span class="o">&lt;&lt;</span> <span class="n">g</span><span class="o">.</span><span class="n">to_s</span>
</span><span class='line'><span class="c1"># abc + def is not equal to 10</span>
</span><span class='line'>
</span><span class='line'><span class="n">j</span><span class="o">.</span><span class="n">object_id</span>
</span><span class='line'><span class="c1"># 70243124981460</span>
</span><span class='line'><span class="n">e</span><span class="o">.</span><span class="n">object_id</span>
</span><span class='line'><span class="c1"># 70243124981460</span>
</span><span class='line'><span class="n">f</span><span class="o">.</span><span class="n">object_id</span>
</span><span class='line'><span class="c1"># 70243124965700</span>
</span><span class='line'>
</span><span class='line'><span class="nb">puts</span> <span class="n">e</span>
</span><span class='line'><span class="c1"># abc + def is not equal to 10</span>
</span><span class='line'><span class="nb">puts</span> <span class="n">f</span>
</span><span class='line'><span class="c1"># def</span>
</span></code></pre></td></tr></table></div></figure>


<p>The first line basically means, append &ldquo; + &rdquo; to e, then append f to e, then append &ldquo; is not equal to &rdquo; to e, and finally append g.to_s to e. I will demonstrate the final way when we get to the Arrays section.</p>

<h2>Escaping characters</h2>

<p>If the String you&rsquo;re after is literally <code>#{e} + #{f} is not equal to #{g}</code>, ie. you don&rsquo;t want Ruby to evaluate e, f, and g, you can escape the <code>#{}</code> blocks by prepending the # with a backslash <code>\</code>. Alternatively, you can use single quotes instead of double quotes, and Ruby will escape those characters for you.</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="nb">puts</span> <span class="s2">&quot;</span><span class="se">\#</span><span class="s2">{e} + </span><span class="se">\#</span><span class="s2">{f} is not equal to </span><span class="se">\#</span><span class="s2">{g}&quot;&quot;</span>
</span><span class='line'><span class="s2"># </span><span class="si">#{</span><span class="n">e</span><span class="si">}</span><span class="s2"> + </span><span class="si">#{</span><span class="n">f</span><span class="si">}</span><span class="s2"> is not equal to </span><span class="si">#{</span><span class="n">g</span><span class="si">}</span><span class="s2"></span>
</span><span class='line'><span class="s2">puts &#39;</span><span class="si">#{</span><span class="n">e</span><span class="si">}</span><span class="s2"> + </span><span class="si">#{</span><span class="n">f</span><span class="si">}</span><span class="s2"> is not equal to </span><span class="si">#{</span><span class="n">g</span><span class="si">}</span><span class="s2">&#39;</span>
</span><span class='line'><span class="s2"># </span><span class="si">#{</span><span class="n">e</span><span class="si">}</span><span class="s2"> + </span><span class="si">#{</span><span class="n">f</span><span class="si">}</span><span class="s2"> is not equal to </span><span class="si">#{</span><span class="n">g</span><span class="si">}</span><span class="s2"></span>
</span><span class='line'><span class="s2">a = &#39;</span><span class="si">#{</span><span class="n">e</span><span class="si">}</span><span class="s2"> + </span><span class="si">#{</span><span class="n">f</span><span class="si">}</span><span class="s2"> is not equal to </span><span class="si">#{</span><span class="n">g</span><span class="si">}</span><span class="s2">&#39;</span>
</span><span class='line'><span class="s2"># &quot;</span><span class="p">\</span><span class="c1">#{e} + \#{f} is not equal to \#{g}&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Ruby Documentation</h2>

<p>There&rsquo;s two way to access the API documentation, online through <a href="http://ruby-doc.org/">http://ruby-doc.org/</a>, or offline in your command line with ri.</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>ri String
</span><span class='line'>ri String#object_id
</span></code></pre></td></tr></table></div></figure>


<p>Unofficially, (if you don&rsquo;t already) you&rsquo;ll learn to love Google and Stack Overflow too :)</p>

<ol>
<li><a href="http://ruby-doc.org/core-2.0/String.html">Ruby Docs &ndash; String</a></li>
</ol>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Hello World]]></title>
    <link href="http://nizhu.github.io/ruby-intro-site/blog/2013/07/27/hello-world/"/>
    <updated>2013-07-27T14:10:00+10:00</updated>
    <id>http://nizhu.github.io/ruby-intro-site/blog/2013/07/27/hello-world</id>
    <content type="html"><![CDATA[<p>It&rsquo;s finally time to start coding.</p>

<figure class='code'><figcaption><span>hello_world.rb </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="nb">puts</span> <span class="s2">&quot;Hello World&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<p>That&rsquo;s it! Save it as hello_world.rb, exit, and now we can run the file. Note that # is the comment delimiter in Ruby and Shell so I will be using that to give you an idea of the expected result of the line preceding it.</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>ruby hello_world.rb
</span><span class='line'><span class="c"># Hello World</span>
</span></code></pre></td></tr></table></div></figure>


<p>Like shell scripts, you can also run them as executables. Create another file:</p>

<figure class='code'><figcaption><span>hello_world_exe.rb </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1">#!/usr/bin/env ruby</span>
</span><span class='line'><span class="nb">puts</span> <span class="s2">&quot;Hello World&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<p>And give it executable permission, and run it.</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>chmod +x hello_world_exe.rb
</span><span class='line'>./hello_world_exe.rb
</span></code></pre></td></tr></table></div></figure>


<p>Hashbangs will be explained at the end of this post for those curious</p>

<h2>Interactive Ruby Shell</h2>

<p><code>irb</code> is a tool that provides an interface to Ruby. It&rsquo;s a great feature, especially for developers new to Ruby because it allows one to interact with Ruby for instant feedback, and build up to a complex script line by line. Code behaves exactly the same way in irb as it would in the method described above. So open up <code>irb</code> and write Hello World again&hellip;.&#8220;`puts &ldquo;Hello World&rdquo;</p>

<p>You&rsquo;ll notice that after printing Hello World, it also says => nil; this is the &lsquo;null&rsquo; value in Ruby. It&rsquo;s the value that is returned by the function, and in this case, the value returned by <code>puts</code>.</p>

<p>If you want to import files that you&rsquo;ve written, there are two ways to do so. A file that is imported in irb is executed just as it would if it had been imported through normal code, and it is the same as if it had been copy and pasted into irb. The following demonstrates the two major difference between the two options so try this out in irb. There is a trick however&hellip; Since Ruby 1.9.2, your current directory is no longer included in the list of directories that Ruby searches for the file you&rsquo;re loading.</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="nb">puts</span> <span class="vg">$:</span>
</span><span class='line'><span class="c1"># /root/.rbenv/versions/2.0.0-p247/lib/ruby/site_ruby/2.0.0</span>
</span><span class='line'><span class="c1"># /root/.rbenv/versions/2.0.0-p247/lib/ruby/site_ruby/2.0.0/x86_64-linux</span>
</span><span class='line'><span class="c1"># /root/.rbenv/versions/2.0.0-p247/lib/ruby/site_ruby</span>
</span><span class='line'><span class="c1"># /root/.rbenv/versions/2.0.0-p247/lib/ruby/vendor_ruby/2.0.0</span>
</span><span class='line'><span class="c1"># /root/.rbenv/versions/2.0.0-p247/lib/ruby/vendor_ruby/2.0.0/x86_64-linux</span>
</span><span class='line'><span class="c1"># /root/.rbenv/versions/2.0.0-p247/lib/ruby/vendor_ruby</span>
</span><span class='line'><span class="c1"># /root/.rbenv/versions/2.0.0-p247/lib/ruby/2.0.0</span>
</span><span class='line'><span class="c1"># /root/.rbenv/versions/2.0.0-p247/lib/ruby/2.0.0/x86_64-linux</span>
</span></code></pre></td></tr></table></div></figure>


<p>To fix this, we start irb with <code>irb -I .</code></p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="nb">puts</span> <span class="vg">$:</span>
</span><span class='line'><span class="c1"># /root/ruby-intro</span>
</span><span class='line'><span class="c1"># /root/.rbenv/versions/2.0.0-p247/lib/ruby/site_ruby/2.0.0</span>
</span><span class='line'><span class="c1"># /root/.rbenv/versions/2.0.0-p247/lib/ruby/site_ruby/2.0.0/x86_64-linux</span>
</span><span class='line'><span class="c1"># /root/.rbenv/versions/2.0.0-p247/lib/ruby/site_ruby</span>
</span><span class='line'><span class="c1"># /root/.rbenv/versions/2.0.0-p247/lib/ruby/vendor_ruby/2.0.0</span>
</span><span class='line'><span class="c1"># /root/.rbenv/versions/2.0.0-p247/lib/ruby/vendor_ruby/2.0.0/x86_64-linux</span>
</span><span class='line'><span class="c1"># /root/.rbenv/versions/2.0.0-p247/lib/ruby/vendor_ruby</span>
</span><span class='line'><span class="c1"># /root/.rbenv/versions/2.0.0-p247/lib/ruby/2.0.0</span>
</span><span class='line'><span class="c1"># /root/.rbenv/versions/2.0.0-p247/lib/ruby/2.0.0/x86_64-linux</span>
</span></code></pre></td></tr></table></div></figure>


<p>Let&rsquo;s try again.</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="nb">load</span> <span class="s1">&#39;hello_world.rb&#39;</span>
</span><span class='line'><span class="c1"># Hello World</span>
</span><span class='line'><span class="c1"># =&gt; true</span>
</span><span class='line'><span class="nb">load</span> <span class="s1">&#39;hello_world.rb&#39;</span>
</span><span class='line'><span class="c1"># Hello World</span>
</span><span class='line'><span class="c1"># =&gt; true</span>
</span><span class='line'><span class="nb">require</span> <span class="s1">&#39;hello_world&#39;</span>
</span><span class='line'><span class="c1"># Hello World</span>
</span><span class='line'><span class="c1"># =&gt; true</span>
</span><span class='line'><span class="nb">require</span> <span class="s1">&#39;hello_world&#39;</span>
</span><span class='line'><span class="c1"># =&gt; false</span>
</span></code></pre></td></tr></table></div></figure>


<p>The differences are:
*   require will not import a file more than once
*   file extension is not necessary when importing with require</p>

<p>Generally it&rsquo;s more appropriate to use require unless you do need to execute some code more than once.</p>

<h2>Hashbangs</h2>

<p>You might have come across this in COMP2041. This is the line at the top of scripts that tells your shell what to execute it with &ndash; your shell will simply interpret it as a shell script without it.</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>chmod +x hello_world.rb
</span><span class='line'>./hello_world.rb
</span><span class='line'><span class="c"># ./hello_world.rb: line 1: puts: command not found</span>
</span></code></pre></td></tr></table></div></figure>


<h3>/usr/bin/env</h3>

<p>The characters following the exclamation mark is the path of the executable that you want to run the script with.</p>

<p>Since you now have several different versions of Ruby installed, it&rsquo;s best to make the script run with the version that you intend to. rbenv controls the Ruby version in your environment, so that&rsquo;s the best one to use! By <code>/usr/bin/env ruby</code>, the script will be run with the same ruby as typing ruby in the command line. To demonstrate, create the 2 files below, and then enter the following commands (make note of the versions):</p>

<figure class='code'><figcaption><span>version_system.rb </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1">#!/usr/bin/ruby</span>
</span><span class='line'><span class="nb">puts</span> <span class="no">RUBY_VERSION</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span>version_env.rb </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1">#!/usr/bin/env ruby</span>
</span><span class='line'><span class="nb">puts</span> <span class="no">RUBY_VERSION</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>ruby -v
</span><span class='line'><span class="c"># ruby 2.0.0p247 (2013-06-27 revision 41674) [x86_64-darwin12.4.0]</span>
</span><span class='line'>/usr/bin/ruby -v
</span><span class='line'><span class="c"># ruby 1.8.7 (2012-02-08 patchlevel 358) [universal-darwin12.0]</span>
</span><span class='line'>chmod +x version_env.rb
</span><span class='line'>./version_env.rb
</span><span class='line'><span class="c"># 2.0.0</span>
</span><span class='line'>chmod +x version_system.rb
</span><span class='line'>./version_system.rb
</span><span class='line'><span class="c"># 1.8.7</span>
</span></code></pre></td></tr></table></div></figure>


<ol>
<li><a href="http://en.wikipedia.org/wiki/Interactive_Ruby_Shell">Wikipedia on Hashbangs</a></li>
<li><a href="http://en.wikipedia.org/wiki/Shebang_(Unix)">Wikipedia on irb</a></li>
<li><a href="http://www.skorks.com/2009/08/digging-into-a-ruby-installation-require-vs-load/">Alan Skorkin on Require vs Load</a></li>
</ol>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Installing Ruby]]></title>
    <link href="http://nizhu.github.io/ruby-intro-site/blog/2013/07/27/installing-ruby/"/>
    <updated>2013-07-27T12:21:00+10:00</updated>
    <id>http://nizhu.github.io/ruby-intro-site/blog/2013/07/27/installing-ruby</id>
    <content type="html"><![CDATA[<p>When I was first starting out in Ruby, this is what gave me the biggest problems. One can install from their operating system&rsquo;s package manager easily enough (likely be installed already with the system), but because of how quickly the Ruby community moves, using system Ruby is generally not a good idea. Every now and then, you&rsquo;ll come across version incompatibility issues and if you need to work on different apps with different versions of Ruby, then you&rsquo;re in a bit of a mess. Not to mention the permission issues.</p>

<p>To get around this, we use a Ruby version manager &ndash; one named simply rvm, and another, rbenv.</p>

<p>I will be going through installing Ruby with rbenv on Bash with you simply because I&rsquo;ve personally had fewer issues with it integrating with our Bamboo continuous integration environment, but that&rsquo;s a story for another day. You&rsquo;ll no doubt come across problems that I didn&rsquo;t foresee. If it tells you of a missing dependency, just install it. Setting up Ruby was a great exercise in google-fu for me; don&rsquo;t be discouraged if you end up having to reinstall several times.</p>

<p>Please read the OSX comments even if you don&rsquo;t have OSX!</p>

<h2>OSX</h2>

<p>If you have a Mac, you&rsquo;re in luck &ndash; you have Homebrew. If you don&rsquo;t, just install it with <code>ruby -e "$(curl -fsSL https://raw.github.com/mxcl/homebrew/go)"</code></p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>brew update
</span><span class='line'>brew install rbenv
</span></code></pre></td></tr></table></div></figure>


<p>Unfortunately, a plugin is required to install Ruby with rbenv</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>brew install ruby-build
</span></code></pre></td></tr></table></div></figure>


<p>&lsquo;Turn on&rsquo; rbenv</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="k">if </span>which rbenv &gt; /dev/null; <span class="k">then </span><span class="nb">eval</span> <span class="s2">&quot;$(rbenv init -)&quot;</span>; <span class="k">fi</span>
</span></code></pre></td></tr></table></div></figure>


<p>Set up bash to always enable rbenv if available</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nb">echo</span> <span class="s1">&#39;if which rbenv &gt; /dev/null; then eval &quot;$(rbenv init -)&quot;; fi&#39;</span> &gt;&gt; ~/.profile
</span></code></pre></td></tr></table></div></figure>


<p>Add rbenv&rsquo;s executables to your PATH</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="c"># My rbenv is installed in /usr/loca/opt/rbenv, but yours may be in ~/.rbenv</span>
</span><span class='line'><span class="c"># Change the line below appropriately</span>
</span><span class='line'><span class="nb">echo</span> <span class="s1">&#39;export PATH=/usr/local/opt/rbenv/shims:$PATH&#39;</span>
</span></code></pre></td></tr></table></div></figure>


<p>Finally install Ruby 2.0.0-p247</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>rbenv install 2.0.0-p247
</span><span class='line'><span class="c"># Command below refreshes rbenv&#39;s executables.</span>
</span><span class='line'><span class="c"># Make sure you run this every time you (un)install a ruby or a gem - more on this later</span>
</span><span class='line'>rbenv rehash
</span></code></pre></td></tr></table></div></figure>


<h2>Debian/Ubuntu/Linux Mint</h2>

<p>For fun times, install these dependencies</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>apt-get install build-essential openssl libreadline6 libreadline6-dev curl git-core zlib1g zlib1g-dev libssl-dev libyaml-dev libsqlite3-dev sqlite3 libxml2-dev libxslt-dev autoconf libc6-dev ncurses-dev automake libtool bison subversion pkg-config nodejs
</span></code></pre></td></tr></table></div></figure>


<p>Install rbenv + ruby-build</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>git clone https://github.com/sstephenson/rbenv.git ~/.rbenv
</span><span class='line'><span class="nb">echo</span> <span class="s1">&#39;export PATH=&quot;$HOME/.rbenv/bin:$PATH&quot;&#39;</span> &gt;&gt; ~/.bashrc
</span><span class='line'><span class="nb">echo</span> <span class="s1">&#39;eval &quot;$(rbenv init -)&quot;&#39;</span> &gt;&gt; ~/.bashrc
</span><span class='line'><span class="nb">exec</span> <span class="nv">$SHELL</span> -l
</span><span class='line'>mkdir -p ~/.rbenv/plugins
</span><span class='line'>git clone https://github.com/sstephenson/ruby-build.git ~/.rbenv/plugins/ruby-build
</span><span class='line'>rbenv install 2.0.0-p247
</span><span class='line'>rbenv rehash
</span></code></pre></td></tr></table></div></figure>


<h2>Windows</h2>

<p><a href="http://rubyinstaller.org/">http://rubyinstaller.org/</a></p>

<h2>Keeping legacy code consistent</h2>

<p>You may have Ruby scripts before installing rbenv that ran with system Ruby, so it&rsquo;s best to keep it that way. To ensure that this happens, we can make system ruby the default for rbenv.</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>rbenv global system
</span><span class='line'>rbenv version
</span><span class='line'><span class="c"># system (set by /usr/local/opt/rbenv/version)</span>
</span></code></pre></td></tr></table></div></figure>


<p>You can obviously set the global default to 2.0.0-p247 if you wish too.</p>

<h2>Make rbenv use a specific version</h2>

<p>Whenever you interact with rbenv, it will look in your current directory for a file named .rbenv-version before falling back to the global default. Try the following:</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nb">cd</span> /tmp
</span><span class='line'>rbenv version
</span><span class='line'><span class="c"># system (set by /usr/local/opt/rbenv/version)</span>
</span><span class='line'><span class="nb">echo</span> <span class="s1">&#39;2.0.0-p247&#39;</span> &gt; .rbenv-version
</span><span class='line'>rbenv version
</span><span class='line'><span class="c"># 2.0.0-p247 (set by /tmp/.rbenv-version)</span>
</span></code></pre></td></tr></table></div></figure>


<p>s</p>

<p>The best thing about setting versions with the file is that you can commit this file to your code repository, and it will ensure that every developer on every computer using rbenv will be using the version of Ruby that is intended (unless they really don&rsquo;t want to).</p>

<ol>
<li><a href="https://rvm.io/">rvm</a></li>
<li><a href="https://github.com/sstephenson/rbenv">rbenv</a></li>
<li><a href="https://en.wikipedia.org/wiki/Continuous_integration">Wikipedia on Continuous Integration</a></li>
<li><a href="https://www.atlassian.com/software/bamboo">Atlassian Bamboo</a></li>
<li><a href="http://brew.sh/">Homebrew</a></li>
<li><a href="https://github.com/sstephenson/rbenv#installation">Installing rbenv</a></li>
<li><a href="https://github.com/sstephenson/ruby-build">ruby-build rbenv plugin</a></li>
</ol>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Intro to intro]]></title>
    <link href="http://nizhu.github.io/ruby-intro-site/blog/2013/07/27/intro-to-intro/"/>
    <updated>2013-07-27T10:37:00+10:00</updated>
    <id>http://nizhu.github.io/ruby-intro-site/blog/2013/07/27/intro-to-intro</id>
    <content type="html"><![CDATA[<p>Ruby is a dynamically typed, object oriented programming language that first appeared toward the end of 1995, so it&rsquo;s a bit younger than the other 2 similar languages in the mainstream, Python and Perl. In my opinion, it&rsquo;s more hipster and better looking than its cousins, and intuitively, it&rsquo;s as close to English as general purpose programming languages go. As such Ruby is one of the easiest languages to understand.</p>

<p>It really only appeared out of obscurity in 2005 with the rise in popularity of the Ruby-based web application framework, Rails. It has however, greatly matured since then.</p>

<p>There are many different implementations around, including one (JRuby) which compiles your Ruby code to run on the JVM. It allows you to use native Java classes in your Ruby code, and Ruby classes in your Java code. I&rsquo;m not familiar with the obvious benefits of using these features, but if you ever feel like writing a Swing app with Ruby, you have that option.</p>

<p>The main C-based implementation, also known as MRI, is now up to version 2.0.0-p247. The first version of 2.0.0 was released less than 6 months ago, but the release was designed to be backward compatible with 1.9.3 (with 5 minor exceptions) so one should be able to use any Ruby documentation written in the last 6 or so years with little issue.</p>

<ol>
<li><a href="http://www.ruby-lang.org/en/about/">Official About Ruby</a></li>
<li><a href="http://en.wikipedia.org/wiki/Ruby_(programming_language)">Wikipedia on Ruby</a></li>
<li><a href="http://en.wikipedia.org/wiki/JRuby">Wikipedia on JRuby</a></li>
<li><a href="http://www.ruby-lang.org/en/news/2013/02/24/ruby-2-0-0-p0-is-released/">Ruby 2.0.0 Release Notes</a></li>
</ol>

]]></content>
  </entry>
  
</feed>
